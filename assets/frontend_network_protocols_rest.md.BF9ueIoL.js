import{_ as a,c as i,o as n,a7 as t}from"./chunks/framework.Dtft01Yp.js";const c=JSON.parse('{"title":"🌌 RESTful API 设计规范完全指南","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/network/protocols/rest.md","filePath":"frontend/network/protocols/rest.md","lastUpdated":1752139687000}'),l={name:"frontend/network/protocols/rest.md"};function e(r,s,p,h,d,o){return n(),i("div",null,s[0]||(s[0]=[t(`<h1 id="🌌-restful-api-设计规范完全指南" tabindex="-1">🌌 RESTful API 设计规范完全指南 <a class="header-anchor" href="#🌌-restful-api-设计规范完全指南" aria-label="Permalink to &quot;🌌 RESTful API 设计规范完全指南&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#💡-一、核心概念与原则">💡 一、核心概念与原则</a></li><li><a href="#✏️-二、uri设计规范">✏️ 二、URI设计规范</a></li><li><a href="#📓-三、http方法使用规范">📓 三、HTTP方法使用规范</a></li><li><a href="#🎨-四、请求与响应设计">🎨 四、请求与响应设计</a></li><li><a href="#🛑-五、错误处理机制">🛑 五、错误处理机制</a></li><li><a href="#✒️-六、高级设计技巧">✒️ 六、高级设计技巧</a></li><li><a href="#🛡️-七、安全与性能">🛡️ 七、安全与性能</a></li><li><a href="#🛠️-八、实战设计示例">🛠️ 八、实战设计示例</a></li><li><a href="#🔗-九、总结-restful设计核心原则">🔗 九、总结：RESTful设计核心原则</a></li></ul></nav><h2 id="💡-一、核心概念与原则" tabindex="-1">💡 一、核心概念与原则 <a class="header-anchor" href="#💡-一、核心概念与原则" aria-label="Permalink to &quot;💡 一、核心概念与原则&quot;">​</a></h2><ul><li><strong>资源导向架构</strong>：将系统中的所有实体（用户、订单等）抽象为资源，每个资源通过URI唯一标识110</li><li><strong>统一接口</strong>：使用标准HTTP方法（GET/POST/PUT/DELETE/PATCH）操作资源，实现CRUD语义18</li><li><strong>无状态通信</strong>：服务器不保存客户端会话状态，每次请求需包含完整上下文信息1</li><li><strong>可缓存性</strong>：利用HTTP缓存机制（如Cache-Control, ETag）优化性能16</li><li><strong>分层系统</strong>：客户端与服务器解耦，通过中间层（网关/代理）增强安全性和负载均衡1</li></ul><br><h2 id="✏️-二、uri设计规范" tabindex="-1">✏️ 二、URI设计规范 <a class="header-anchor" href="#✏️-二、uri设计规范" aria-label="Permalink to &quot;✏️ 二、URI设计规范&quot;">​</a></h2><h4 id="_1-基本规则" tabindex="-1">1. 基本规则 <a class="header-anchor" href="#_1-基本规则" aria-label="Permalink to &quot;1. 基本规则&quot;">​</a></h4><ul><li>名词复数形式：<code>/users</code> 而非 <code>/user</code></li><li>小写字母+中杠连接：<code>/order-items</code> 而非 <code>/orderItems</code> 或 <code>/order_items</code></li><li>避免动词：<code>GET /tickets</code> 而非 <code>GET /getTickets</code></li><li>版本控制：URI中嵌入版本号，如 <code>/v1/users</code></li></ul><h4 id="_2-资源层级" tabindex="-1">2. 资源层级 <a class="header-anchor" href="#_2-资源层级" aria-label="Permalink to &quot;2. 资源层级&quot;">​</a></h4><ul><li>嵌套资源不超过两层：</li></ul><div class="language-http vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /users/{id}/orders   // 推荐</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /users/{id}/orders/{orderId}/items  // 不推荐 - 层级过深</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>替代方案：扁平化设计+查询参数 <code>GET /orders?user={id}</code></li></ul><h4 id="_3-查询参数规范" tabindex="-1">3. 查询参数规范 <a class="header-anchor" href="#_3-查询参数规范" aria-label="Permalink to &quot;3. 查询参数规范&quot;">​</a></h4><table tabindex="0"><thead><tr><th><strong>参数类型</strong></th><th><strong>示例</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>过滤</td><td><code>?state=open&amp;age&gt;30</code></td><td>按条件筛选资源</td></tr><tr><td>字段选择</td><td><code>?fields=id,name,email</code></td><td>限制返回字段</td></tr><tr><td>排序</td><td><code>?sort=-price,+created</code></td><td>-降序，+升序</td></tr><tr><td>分页</td><td><code>?offset=20&amp;limit=10</code></td><td>offset开始位置，limit数量</td></tr></tbody></table><br><h2 id="📓-三、http方法使用规范" tabindex="-1">📓 三、HTTP方法使用规范 <a class="header-anchor" href="#📓-三、http方法使用规范" aria-label="Permalink to &quot;📓 三、HTTP方法使用规范&quot;">​</a></h2><table tabindex="0"><thead><tr><th><strong>方法</strong></th><th><strong>语义</strong></th><th><strong>幂等性</strong></th><th><strong>安全性</strong></th><th><strong>典型应用场景</strong></th></tr></thead><tbody><tr><td>GET</td><td>获取资源</td><td>是</td><td>是</td><td>读取单个或集合资源</td></tr><tr><td>POST</td><td>创建资源</td><td>否</td><td>否</td><td>新建资源，返回201 Created</td></tr><tr><td>PUT</td><td>全量更新</td><td>是</td><td>否</td><td>替换整个资源，需提供完整属性</td></tr><tr><td>PATCH</td><td>部分更新</td><td>否</td><td>否</td><td>仅提交需修改的字段</td></tr><tr><td>DELETE</td><td>删除资源</td><td>是</td><td>否</td><td>删除资源，返回204 No Content</td></tr></tbody></table><p>关键说明：</p><ul><li><strong>POST vs PUT</strong>：POST创建新资源（URI由服务器生成），PUT更新已有资源（客户端指定完整URI）</li><li><strong>幂等操作</strong>：<code>GET、PUT、DELETE</code>执行多次效果相同，失败后可安全重试</li><li><strong>方法覆盖</strong>：当客户端仅支持<code>GET/POST</code>时（如浏览器），使用<code>X-HTTP-Method-Override</code>头部模拟<code>PUT/DELETE</code></li></ul><br><h2 id="🎨-四、请求与响应设计" tabindex="-1">🎨 四、请求与响应设计 <a class="header-anchor" href="#🎨-四、请求与响应设计" aria-label="Permalink to &quot;🎨 四、请求与响应设计&quot;">​</a></h2><h4 id="_1-请求规范" tabindex="-1">1 请求规范 <a class="header-anchor" href="#_1-请求规范" aria-label="Permalink to &quot;1 请求规范&quot;">​</a></h4><ul><li>Headers： <ul><li><code>Content-Type: application/json</code>（推荐）</li><li><code>Accept: application/json</code></li><li><code>Authorization: Bearer &lt;token&gt;</code> 认证</li></ul></li><li>Body格式： <ul><li>POST/PUT/PATCH使用JSON格式</li></ul></li></ul><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;iPhone 15&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;price&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7999</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;stock&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="_2-响应设计" tabindex="-1">2 响应设计 <a class="header-anchor" href="#_2-响应设计" aria-label="Permalink to &quot;2 响应设计&quot;">​</a></h4><ul><li><strong>成功响应</strong>： <ul><li><code>200 OK</code>：GET/PUT/PATCH成功</li><li><code>201 Created</code>：POST成功，Location头部包含新资源URI</li><li><code>204 No Content</code>：DELETE成功210-</li></ul></li><li><strong>响应体结构</strong>：</li></ul><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 单资源</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">123</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Alice&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;email&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;alice@example.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 集合资源（分页）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;paging&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;offset&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;limit&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;total&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">345</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { </span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>禁止包装：直接返回数据，避免{ &quot;success&quot;: true, &quot;data&quot;: {...} }冗余结构27</p><br><h2 id="🛑-五、错误处理机制" tabindex="-1">🛑 五、错误处理机制 <a class="header-anchor" href="#🛑-五、错误处理机制" aria-label="Permalink to &quot;🛑 五、错误处理机制&quot;">​</a></h2><h4 id="_1-http状态码" tabindex="-1">1 HTTP状态码 <a class="header-anchor" href="#_1-http状态码" aria-label="Permalink to &quot;1 HTTP状态码&quot;">​</a></h4><table tabindex="0"><thead><tr><th><strong>状态码</strong></th><th><strong>含义</strong></th><th><strong>使用场景</strong></th></tr></thead><tbody><tr><td>400</td><td>Bad Request</td><td>参数校验失败，格式错误</td></tr><tr><td>401</td><td>Unauthorized</td><td>未提供有效认证凭证</td></tr><tr><td>403</td><td>Forbidden</td><td>认证成功但无权操作</td></tr><tr><td>404</td><td>Not Found</td><td>资源不存在</td></tr><tr><td>422</td><td>Unprocessable Entity</td><td>语义错误（如字段验证失败）</td></tr><tr><td>429</td><td>Too Many Requests</td><td>请求频率超限</td></tr><tr><td>500</td><td>Internal Error</td><td>服务端未处理异常</td></tr></tbody></table><h4 id="_2-错误响应体" tabindex="-1">2 错误响应体 <a class="header-anchor" href="#_2-错误响应体" aria-label="Permalink to &quot;2 错误响应体&quot;">​</a></h4><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;code&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;VALIDATION_FAILED&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;输入验证失败&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;details&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;field&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;email&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;无效的邮箱格式&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;field&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;password&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;error&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;密码长度至少8位&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;reference&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://api.example.com/docs/errors#VALIDATION_FAILED&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>关键要求：</p><ul><li>错误信息需包含机器可读的code和用户友好的message210</li><li>校验错误明确指示问题字段及规则</li></ul><br><h2 id="✒️-六、高级设计技巧" tabindex="-1">✒️ 六、高级设计技巧 <a class="header-anchor" href="#✒️-六、高级设计技巧" aria-label="Permalink to &quot;✒️ 六、高级设计技巧&quot;">​</a></h2><h4 id="_1-版本管理策略" tabindex="-1">1 版本管理策略 <a class="header-anchor" href="#_1-版本管理策略" aria-label="Permalink to &quot;1 版本管理策略&quot;">​</a></h4><table tabindex="0"><thead><tr><th><strong>方法</strong></th><th><strong>示例</strong></th><th><strong>适用场景</strong></th></tr></thead><tbody><tr><td>URL路径</td><td>/v1/users</td><td>最常用，易于调试</td></tr><tr><td>请求头</td><td>X-API-Version: 1</td><td>避免URI污染</td></tr><tr><td>媒体类型</td><td>（Content Negotiation）</td><td>Accept: application/vnd.myapi.v1+json 精确控制版本</td></tr></tbody></table><h4 id="_2-hateoas-超媒体驱动" tabindex="-1">2 HATEOAS（超媒体驱动） <a class="header-anchor" href="#_2-hateoas-超媒体驱动" aria-label="Permalink to &quot;2 HATEOAS（超媒体驱动）&quot;">​</a></h4><p>在响应中嵌入相关资源链接，引导客户端发现API：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">711</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;BMW X5&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;links&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;rel&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;self&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;href&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/v1/cars/711&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;rel&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;engine&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;href&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/v1/cars/711/engine&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><blockquote><p>优势：降低客户端与URI结构的耦合，服务端可动态调整资源路径35</p></blockquote><h4 id="_3-批量操作" tabindex="-1">3 批量操作 <a class="header-anchor" href="#_3-批量操作" aria-label="Permalink to &quot;3 批量操作&quot;">​</a></h4><ul><li><strong>批量删除</strong>：<code>DELETE /users?id=1,2,3</code></li><li><strong>批量更新</strong>：<code>PATCH /users</code> + 更新列表</li></ul><p>注意：批量操作需保证原子性，失败时整体回滚</p><br><h2 id="🛡️-七、安全与性能" tabindex="-1">🛡️ 七、安全与性能 <a class="header-anchor" href="#🛡️-七、安全与性能" aria-label="Permalink to &quot;🛡️ 七、安全与性能&quot;">​</a></h2><h4 id="_1-安全实践" tabindex="-1">1 安全实践 <a class="header-anchor" href="#_1-安全实践" aria-label="Permalink to &quot;1 安全实践&quot;">​</a></h4><ul><li><strong>HTTPS强制使用</strong>：所有API必须通过TLS加密，非HTTPS请求返回403</li><li><strong>认证与授权</strong>： <ul><li>OAuth 2.0：第三方授权标准</li><li>JWT：无状态令牌认证</li></ul></li><li><strong>输入验证</strong>：防范SQL注入/XSS攻击，过滤所有用户输入</li><li><strong>速率限制</strong>:</li></ul><div class="language-http vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">X-RateLimit-Limit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1000    // 时间窗口内最大请求数</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">X-RateLimit-Remaining</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 999 // 剩余可用请求数</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">X-RateLimit-Reset</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 3600    // 重置时间（秒）:cite[4]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h4 id="_2-性能优化" tabindex="-1">2 性能优化 <a class="header-anchor" href="#_2-性能优化" aria-label="Permalink to &quot;2 性能优化&quot;">​</a></h4><ul><li>缓存控制： <ul><li><code>Cache-Control: max-age=3600</code></li><li><code>ETag: &quot;33a64df5&quot;</code>（资源指纹）</li></ul></li><li>数据压缩：<code>Accept-Encoding: gzip</code></li><li>部分响应：通过<code>fields</code>参数减少网络传输</li></ul><br><h2 id="🛠️-八、实战设计示例" tabindex="-1">🛠️ 八、实战设计示例 <a class="header-anchor" href="#🛠️-八、实战设计示例" aria-label="Permalink to &quot;🛠️ 八、实战设计示例&quot;">​</a></h2><h4 id="_1-需求分析" tabindex="-1">1 需求分析 <a class="header-anchor" href="#_1-需求分析" aria-label="Permalink to &quot;1 需求分析&quot;">​</a></h4><p>设计一个博客系统API，支持：</p><ul><li>用户管理</li><li>文章发布/评论</li><li>文章分类</li></ul><h4 id="_2-api设计" tabindex="-1">2 API设计 <a class="header-anchor" href="#_2-api设计" aria-label="Permalink to &quot;2 API设计&quot;">​</a></h4><ul><li>用户资源 <ul><li><code>POST /v1/users</code> - 创建用户</li><li><code>GET /v1/users/{id}</code> - 获取用户详情</li><li><code>PATCH /v1/users/{id}</code> - 更新用户资料</li></ul></li><li>文章资源 <ul><li><code>GET /v1/posts?category=tech&amp;sort=-created</code> - 获取科技类最新文章</li><li><code>POST /v1/posts</code> - 创建文章</li><li><code>DELETE /v1/posts/{id}</code> - 删除文章</li></ul></li><li>评论子资源 <ul><li><code>GET /v1/posts/{id}/comments</code> - 获取文章评论</li><li><code>POST /v1/posts/{id}/comments</code> - 添加评论</li></ul></li></ul><h4 id="_3-异步操作" tabindex="-1">3 异步操作 <a class="header-anchor" href="#_3-异步操作" aria-label="Permalink to &quot;3 异步操作&quot;">​</a></h4><p>长时间任务返回<code>202 Accepted</code>：</p><div class="language-http vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">HTTP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 202</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Accepted</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /queue/1234    // 任务状态查询地址</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Retry-After</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 120         // 建议重试时间（秒）</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><br><h2 id="🔗-九、总结-restful设计核心原则" tabindex="-1">🔗 九、总结：RESTful设计核心原则 <a class="header-anchor" href="#🔗-九、总结-restful设计核心原则" aria-label="Permalink to &quot;🔗 九、总结：RESTful设计核心原则&quot;">​</a></h2><ul><li><strong>资源化</strong>：URI只标识资源，行为通过HTTP方法表达</li><li><strong>标准化</strong>：遵循HTTP语义，正确使用状态码和方法</li><li><strong>无状态</strong>：每次请求自带完整上下文，服务端不存储会话</li><li><strong>可发现性</strong>：通过HATEOAS使API自描述</li><li><strong>版本控制</strong>：避免破坏性变更，支持平滑升级</li></ul><blockquote><p>完整设计案例参考：<a href="https://docs.github.com/en/rest" target="_blank" rel="noreferrer">GitHub API v3</a></p></blockquote><blockquote><p>工具推荐：Swagger/OpenAPI 规范生成交互式文档</p></blockquote>`,69)]))}const E=a(l,[["render",e]]);export{c as __pageData,E as default};
