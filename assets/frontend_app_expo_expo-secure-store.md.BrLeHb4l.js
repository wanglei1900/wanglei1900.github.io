import{_ as a,c as r,o,a7 as t}from"./chunks/framework.Dtft01Yp.js";const u=JSON.parse('{"title":"expo-secure-store","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/app/expo/expo-secure-store.md","filePath":"frontend/app/expo/expo-secure-store.md","lastUpdated":1751275676000}'),i={name:"frontend/app/expo/expo-secure-store.md"};function s(l,e,n,c,h,d){return o(),r("div",null,e[0]||(e[0]=[t('<h1 id="expo-secure-store" tabindex="-1">expo-secure-store <a class="header-anchor" href="#expo-secure-store" aria-label="Permalink to &quot;expo-secure-store&quot;">​</a></h1><blockquote><p>expo-secure-store 是一个用于在移动应用程序中安全存储敏感数据的库。它提供了一组简单的API，使开发人员可以轻松地存储和检索敏感数据，如用户凭据、令牌和其他机密信息。这个库是Expo框架的一部分，Expo是一个开源平台，用于构建、部署和发布原生移动应用程序。</p></blockquote><p><a href="https://docs.expo.dev/versions/latest/sdk/securestore/" target="_blank" rel="noreferrer">expo-secure-store 文档</a></p><p>在底层实现上，expo-secure-store 利用了操作系统提供的安全存储机制来达到安全存储数据的目的。具体来说：</p><ul><li>iOS平台：它使用了Keychain服务，这是一个由苹果公司提供的用于存储密码、密钥等敏感信息的系统级服务。Keychain服务使用设备级别的加密来保护数据，防止未经授权的访问。</li><li>Android平台：它使用了Keystore系统服务，这是一个由Android操作系统提供的用于存储加密密钥和证书的存储系统。Keystore同样使用设备级别的加密来保护存储的数据。</li></ul><p>通过利用这些操作系统级别的安全存储机制，expo-secure-store 能够确保存储的敏感数据受到保护，即使在设备丢失或被盗的情况下，也能防止数据泄露。</p><br><br><h2 id="_1-keychain" tabindex="-1">1 Keychain <a class="header-anchor" href="#_1-keychain" aria-label="Permalink to &quot;1 Keychain&quot;">​</a></h2><h3 id="_1-1-概述" tabindex="-1">1.1 概述 <a class="header-anchor" href="#_1-1-概述" aria-label="Permalink to &quot;1.1 概述&quot;">​</a></h3><blockquote><p>Keychain是iOS系统提供的一项安全存储服务，它允许开发者将敏感信息（如密码、证书等）存储在设备的安全芯片或特定区域中，以确保这些信息不会被未经授权的应用程序或用户访问。</p></blockquote><h3 id="_1-2-功能特点" tabindex="-1">1.2 功能特点 <a class="header-anchor" href="#_1-2-功能特点" aria-label="Permalink to &quot;1.2 功能特点&quot;">​</a></h3><ul><li>硬件级加密：Keychain利用iOS设备的硬件加密技术来保护存储的数据，这种加密方式使得即使设备被越狱或遭受攻击，存储在Keychain中的信息也难以被直接读取。</li><li>分类存储：Keychain支持不同类型的数据分类存储，如密码、证书、安全笔记等，每种类型的数据都有其特定的访问控制属性。</li><li>精细的访问控制：开发者可以根据实际需求设置不同的访问权限，例如，对于一些特别敏感的信息，可以设置为只有在用户输入正确的密码后才能访问。此外，还可以设置数据仅在设备解锁时可用，或要求用户每次访问时都需要重新验证身份。</li></ul><h3 id="_1-3-应用场景" tabindex="-1">1.3 应用场景 <a class="header-anchor" href="#_1-3-应用场景" aria-label="Permalink to &quot;1.3 应用场景&quot;">​</a></h3><p>Keychain在iOS开发中被广泛应用于各种场景，如用户登录凭据的保存、API密钥的管理等。它提供了一种安全、可靠的方式来存储和访问敏感信息，有助于提升应用程序的安全性。</p><br><br><h2 id="_2-keystore" tabindex="-1">2 Keystore <a class="header-anchor" href="#_2-keystore" aria-label="Permalink to &quot;2 Keystore&quot;">​</a></h2><h3 id="_2-1-概述" tabindex="-1">2.1 概述 <a class="header-anchor" href="#_2-1-概述" aria-label="Permalink to &quot;2.1 概述&quot;">​</a></h3><blockquote><p>Keystore是Android系统提供的一项安全存储服务，它类似于iOS的Keychain，用于存储加密密钥和其他敏感信息。Keystore利用Android系统的安全特性来保护这些密钥，确保它们只能在特定的应用程序中使用。</p></blockquote><h3 id="_2-2-功能特点" tabindex="-1">2.2 功能特点 <a class="header-anchor" href="#_2-2-功能特点" aria-label="Permalink to &quot;2.2 功能特点&quot;">​</a></h3><ul><li>隔离存储：Keystore实现了加密密钥的隔离存储，这意味着密钥不会被明文存储在文件系统中，而是被安全地保存在设备的硬件加密模块中。这种设计确保了即使设备被破解，密钥也不会轻易泄露。</li><li>全生命周期管理：Keystore支持密钥的全生命周期管理，包括密钥的生成、存储、使用、更新以及销毁等环节。这种全面的管理机制有助于确保密钥的安全性和有效性。</li><li>应用程序隔离：Keystore为每个应用程序提供独立的密钥存储空间，这意味着不同应用程序之间的密钥是相互隔离的。这种隔离机制保证了每个应用程序只能访问属于自己的密钥，从而降低了密钥被滥用的风险。</li></ul><h3 id="_2-3-应用场景" tabindex="-1">2.3 应用场景 <a class="header-anchor" href="#_2-3-应用场景" aria-label="Permalink to &quot;2.3 应用场景&quot;">​</a></h3><p>Keystore在Android开发中同样扮演着重要角色，特别是在涉及到加密操作的场景下。例如，它可以用于存储和管理用于HTTPS通信的SSL/TLS证书、用于加密用户数据的对称密钥等。通过使用Keystore，开发者可以确保这些敏感信息得到充分的保护。</p>',24)]))}const _=a(i,[["render",s]]);export{u as __pageData,_ as default};
