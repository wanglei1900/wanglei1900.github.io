import{_ as d,C as k,c as o,o as n,a7 as e,j as a,b as t,w as i,a as p,G as h,a8 as r}from"./chunks/framework.Dtft01Yp.js";const F=JSON.parse('{"title":"单点登录（SSO）跳转中避免使用Hash模式的原因","description":"","frontmatter":{},"headers":[],"relativePath":"devops/sso/no-hash.md","filePath":"devops/sso/no-hash.md","lastUpdated":1751275676000}'),c={name:"devops/sso/no-hash.md"};function E(u,s,b,g,A,m){const l=k("Mermaid");return n(),o("div",null,[s[4]||(s[4]=e(`<h1 id="单点登录-sso-跳转中避免使用hash模式的原因" tabindex="-1">单点登录（SSO）跳转中避免使用Hash模式的原因 <a class="header-anchor" href="#单点登录-sso-跳转中避免使用hash模式的原因" aria-label="Permalink to &quot;单点登录（SSO）跳转中避免使用Hash模式的原因&quot;">​</a></h1><h2 id="🔒-一、核心问题-url片段-hash-的传输特性" tabindex="-1">🔒 一、核心问题：URL片段（Hash）的传输特性 <a class="header-anchor" href="#🔒-一、核心问题-url片段-hash-的传输特性" aria-label="Permalink to &quot;🔒 一、核心问题：URL片段（Hash）的传输特性&quot;">​</a></h2><h3 id="_1-浏览器不发送hash片段到服务器" tabindex="-1">1 浏览器不发送Hash片段到服务器 <a class="header-anchor" href="#_1-浏览器不发送hash片段到服务器" aria-label="Permalink to &quot;1 浏览器不发送Hash片段到服务器&quot;">​</a></h3><ul><li>Hash部分（#后面的内容）永远不会被发送到服务器</li><li>示例：<a href="https://app.com/#/dashboard?token=abc123" target="_blank" rel="noreferrer">https://app.com/#/dashboard?token=abc123</a><ul><li>浏览器实际请求：<a href="https://app.com/" target="_blank" rel="noreferrer">https://app.com/</a></li><li>服务器完全看不到#/dashboard?token=abc123</li></ul></li></ul><h3 id="_1-sso流程中的关键数据丢失" tabindex="-1">1 SSO流程中的关键数据丢失 <a class="header-anchor" href="#_1-sso流程中的关键数据丢失" aria-label="Permalink to &quot;1 SSO流程中的关键数据丢失&quot;">​</a></h3><ul><li>认证服务器返回的关键参数会被丢弃：</li></ul><div class="language-http vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 认证服务器重定向</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">HTTP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 302</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Found</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://app.com/#/callback?code=AUTH_CODE&amp;state=123</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 浏览器实际请求</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">HTTP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Host</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app.com</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 完全丢失 #/callback?code=AUTH_CODE&amp;state=123</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="⚠️-二、具体问题分析" tabindex="-1">⚠️ 二、具体问题分析 <a class="header-anchor" href="#⚠️-二、具体问题分析" aria-label="Permalink to &quot;⚠️ 二、具体问题分析&quot;">​</a></h2><h3 id="_1-授权码丢失-oauth2授权码模式" tabindex="-1">1 授权码丢失（OAuth2授权码模式） <a class="header-anchor" href="#_1-授权码丢失-oauth2授权码模式" aria-label="Permalink to &quot;1 授权码丢失（OAuth2授权码模式）&quot;">​</a></h3>`,9)),a("ul",null,[a("li",null,[s[1]||(s[1]=a("p",null,"正规流程：",-1)),(n(),t(r,null,{default:i(()=>[h(l,{id:"mermaid-55",class:"mermaid",graph:"sequenceDiagram%0AClient-%3E%3EAuth%20Server%3A%20%E8%AF%B7%E6%B1%82%E6%8E%88%E6%9D%83%0AAuth%20Server-%3E%3EUser%3A%20%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2%0AUser-%3E%3EAuth%20Server%3A%20%E6%8F%90%E4%BA%A4%E5%87%AD%E8%AF%81%0AAuth%20Server-%3E%3EClient%3A%20302%E9%87%8D%E5%AE%9A%E5%90%91%E6%90%BA%E5%B8%A6code%0AClient-%3E%3EAuth%20Server%3A%20%E7%94%A8code%E4%BA%A4%E6%8D%A2token%0A"})]),fallback:i(()=>s[0]||(s[0]=[p(" Loading... ")])),_:1}))]),s[2]||(s[2]=a("li",null,[a("p",null,"Hash模式问题："),a("ul",null,[a("li",null,"授权码code在hash中被丢弃"),a("li",null,"客户端无法完成token交换")])],-1))]),s[5]||(s[5]=e(`<h3 id="_2-token暴露风险-隐式模式" tabindex="-1">2 Token暴露风险（隐式模式） <a class="header-anchor" href="#_2-token暴露风险-隐式模式" aria-label="Permalink to &quot;2 Token暴露风险（隐式模式）&quot;">​</a></h3><ul><li>当使用Implicit Flow时：<div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>重定向URL: https://app.com/#access_token=eyxxx&amp;expires_in=3600</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li>风险： <ul><li>Token暴露在客户端URL中</li><li>可能被浏览器历史记录、Referer头泄露</li><li>可能被恶意浏览器扩展捕获</li></ul></li></ul><h3 id="_3-状态参数丢失" tabindex="-1">3 状态参数丢失 <a class="header-anchor" href="#_3-状态参数丢失" aria-label="Permalink to &quot;3 状态参数丢失&quot;">​</a></h3><ul><li>状态参数state用于防止CSRF攻击：<div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>初始请求: state=8a7s6d</span></span>
<span class="line"><span>回调时应验证: state=8a7s6d</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li>Hash模式下：state参数无法被服务器验证</li></ul><h3 id="_4-pkce扩展失效" tabindex="-1">4. PKCE扩展失效 <a class="header-anchor" href="#_4-pkce扩展失效" aria-label="Permalink to &quot;4. PKCE扩展失效&quot;">​</a></h3><ul><li>PKCE（Proof Key for Code Exchange）流程： <ol><li>客户端生成code_verifier</li><li>发送code_challenge（verifier的变换值）</li><li>回调时提交原始code_verifier</li></ol></li><li>Hash模式下： <ul><li>无法安全传递code_verifier</li><li>PKCE保护机制失效</li></ul></li></ul><h2 id="✅-三、推荐解决方案" tabindex="-1">✅ 三、推荐解决方案 <a class="header-anchor" href="#✅-三、推荐解决方案" aria-label="Permalink to &quot;✅ 三、推荐解决方案&quot;">​</a></h2><h3 id="_1-使用history模式-前端路由" tabindex="-1">1 使用History模式（前端路由） <a class="header-anchor" href="#_1-使用history模式-前端路由" aria-label="Permalink to &quot;1 使用History模式（前端路由）&quot;">​</a></h3><ul><li>配置示例（Vue Router）：</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> router</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> VueRouter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  mode: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;history&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用HTML5 History模式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  routes: [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_2-服务器端配合支持" tabindex="-1">2 服务器端配合支持 <a class="header-anchor" href="#_2-服务器端配合支持" aria-label="Permalink to &quot;2 服务器端配合支持&quot;">​</a></h3><ul><li>Nginx配置示例：</li></ul><div class="language-nginx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  try_files </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$uri $uri/ /index.html;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_3-安全的回调处理流程" tabindex="-1">3 安全的回调处理流程 <a class="header-anchor" href="#_3-安全的回调处理流程" aria-label="Permalink to &quot;3 安全的回调处理流程&quot;">​</a></h3>`,14)),(n(),t(r,null,{default:i(()=>[h(l,{id:"mermaid-196",class:"mermaid",graph:"sequenceDiagram%0A%20%20participant%20User%0A%20%20participant%20ClientApp%0A%20%20participant%20AuthServer%0A%20%20participant%20BackendAPI%0A%20%20%0A%20%20User-%3E%3EClientApp%3A%20%E8%AE%BF%E9%97%AE%E5%BA%94%E7%94%A8%0A%20%20ClientApp-%3E%3EAuthServer%3A%20%E9%87%8D%E5%AE%9A%E5%90%91%E5%88%B0%E7%99%BB%E5%BD%95%0A%20%20User-%3E%3EAuthServer%3A%20%E7%99%BB%E5%BD%95%E8%AE%A4%E8%AF%81%0A%20%20AuthServer-%3E%3EClientApp%3A%20302%E9%87%8D%E5%AE%9A%E5%90%91%E5%88%B0%2Fcallback%3Fcode%3DABC123%0A%20%20ClientApp-%3E%3EBackendAPI%3A%20POST%20%2Fexchange-token%20(%E6%90%BA%E5%B8%A6code)%0A%20%20BackendAPI-%3E%3EAuthServer%3A%20%E9%AA%8C%E8%AF%81code%2BPKCE%0A%20%20AuthServer-%3E%3EBackendAPI%3A%20%E8%BF%94%E5%9B%9Eaccess_token%0A%20%20BackendAPI-%3E%3EClientApp%3A%20%E8%AE%BE%E7%BD%AEHttpOnly%20Cookie%0A%20%20ClientApp-%3E%3EUser%3A%20%E9%87%8D%E5%AE%9A%E5%90%91%E5%88%B0%E4%B8%BB%E9%A1%B5%E9%9D%A2%0A"})]),fallback:i(()=>s[3]||(s[3]=[p(" Loading... ")])),_:1})),s[6]||(s[6]=e(`<h3 id="_4-最佳实践参数传递" tabindex="-1">4 最佳实践参数传递 <a class="header-anchor" href="#_4-最佳实践参数传递" aria-label="Permalink to &quot;4 最佳实践参数传递&quot;">​</a></h3><div class="language-http vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 正确方式（使用query参数）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">HTTP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 302</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Found</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://app.com/callback?code=AUTH_CODE&amp;state=123</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 客户端处理流程</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">1. 后端接收 /callback 请求</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2. 后端用code交换token</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">3. 后端设置安全Cookie</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">4. 重定向到前端主路由</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="🛡️-三、安全增强措施" tabindex="-1">🛡️ 三、安全增强措施 <a class="header-anchor" href="#🛡️-三、安全增强措施" aria-label="Permalink to &quot;🛡️ 三、安全增强措施&quot;">​</a></h2><ol><li>始终使用PKCE扩展 <ul><li>即使是非公共客户端也推荐使用</li><li>有效防止授权码截获攻击</li></ul></li><li>Token存储安全</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 不安全   </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">localStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;token&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, response.token)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 推荐方案</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 后端设置HttpOnly Cookie</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Set</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Cookie</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: access_token</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">xxx; HttpOnly; Secure; SameSite</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Lax</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="3"><li>严格的Redirect URI验证</li></ol><ul><li>在授权服务器注册完整URL：</li></ul><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>允许: https://app.com/callback</span></span>
<span class="line"><span>拒绝: https://app.com</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ol start="4"><li>State参数必用</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 生成随机的state参数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> state</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> crypto.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">randomBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hex&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 存储到sessionStorage</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sessionStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;oauth_state&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, state)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 重定向时包含state</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">redirectTo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`/auth?state=\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">state</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="💡-五、结论-为什么必须避免hash模式" tabindex="-1">💡 五、结论：为什么必须避免Hash模式 <a class="header-anchor" href="#💡-五、结论-为什么必须避免hash模式" aria-label="Permalink to &quot;💡 五、结论：为什么必须避免Hash模式&quot;">​</a></h2><table tabindex="0"><thead><tr><th>问题类型</th><th>Hash模式风险</th><th>History模式解决方案</th></tr></thead><tbody><tr><td>参数传递</td><td>关键参数丢失</td><td>完整传递query参数</td></tr><tr><td>安全性</td><td>Token暴露风险高</td><td>Token可通过后端安全交换</td></tr><tr><td>PKCE支持</td><td>无法实现完整PKCE流程</td><td>支持完整PKCE保护</td></tr><tr><td>CSRF防护</td><td>State参数无法验证</td><td>完整State验证流程</td></tr><tr><td>服务器支持</td><td>无需服务器配置</td><td>需要简单路由配置</td></tr><tr><td>SEO友好度</td><td>不友好</td><td>友好</td></tr></tbody></table><p>最终建议：在SSO集成中始终使用History模式+后端回调处理，避免将敏感参数放在URL hash中。虽然需要额外的服务器配置，但这是实现安全、可靠单点登录的必要代价。</p>`,13))])}const C=d(c,[["render",E]]);export{F as __pageData,C as default};
