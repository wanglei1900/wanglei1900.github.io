import{_ as r,C as k,c as d,o as a,a7 as n,b as e,w as i,a as t,G as p,a8 as h}from"./chunks/framework.Dtft01Yp.js";const F=JSON.parse('{"title":"Chrome DevTools 高级应用学习笔记","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/performance/tools/profiling.md","filePath":"frontend/performance/tools/profiling.md","lastUpdated":1752498754000}'),E={name:"frontend/performance/tools/profiling.md"};function o(c,s,g,u,b,y){const l=k("Mermaid");return a(),d("div",null,[s[4]||(s[4]=n('<h1 id="chrome-devtools-高级应用学习笔记" tabindex="-1">Chrome DevTools 高级应用学习笔记 <a class="header-anchor" href="#chrome-devtools-高级应用学习笔记" aria-label="Permalink to &quot;Chrome DevTools 高级应用学习笔记&quot;">​</a></h1><h2 id="一、性能分析高级技巧" tabindex="-1">一、性能分析高级技巧 <a class="header-anchor" href="#一、性能分析高级技巧" aria-label="Permalink to &quot;一、性能分析高级技巧&quot;">​</a></h2><h3 id="_1-性能录制与分析" tabindex="-1">1. 性能录制与分析 <a class="header-anchor" href="#_1-性能录制与分析" aria-label="Permalink to &quot;1. 性能录制与分析&quot;">​</a></h3>',3)),(a(),e(h,null,{default:i(()=>[p(l,{id:"mermaid-9",class:"mermaid",graph:"graph%20TD%0A%20%20%20%20A%5B%E5%BC%80%E5%A7%8B%E5%BD%95%E5%88%B6%5D%20--%3E%20B%5B%E6%89%A7%E8%A1%8C%E7%94%A8%E6%88%B7%E6%93%8D%E4%BD%9C%5D%0A%20%20%20%20B%20--%3E%20C%5B%E5%81%9C%E6%AD%A2%E5%BD%95%E5%88%B6%5D%0A%20%20%20%20C%20--%3E%20D%5B%E5%88%86%E6%9E%90%E7%81%AB%E7%84%B0%E5%9B%BE%5D%0A%20%20%20%20D%20--%3E%20E%5B%E8%AF%86%E5%88%AB%E6%80%A7%E8%83%BD%E7%93%B6%E9%A2%88%5D%0A%20%20%20%20E%20--%3E%20F%5B%E4%BC%98%E5%8C%96%E4%BB%A3%E7%A0%81%5D%0A"})]),fallback:i(()=>s[0]||(s[0]=[t(" Loading... ")])),_:1})),s[5]||(s[5]=n(`<p><strong>关键功能：</strong></p><ul><li><strong>长任务标记</strong>：识别超过50ms的任务（红色三角标记）</li><li><strong>布局偏移可视化</strong>：紫色闪烁标记CLS问题</li><li><strong>网络瀑布流</strong>：查看资源加载时序</li><li><strong>主线程活动</strong>：分析JavaScript执行时间</li></ul><p><strong>优化建议：</strong></p><ul><li>查找并分解长任务（Long Tasks）</li><li>避免强制同步布局（Forced Reflows）</li><li>减少不必要的样式计算</li></ul><h3 id="_2-性能洞察面板-performance-insights" tabindex="-1">2. 性能洞察面板（Performance Insights） <a class="header-anchor" href="#_2-性能洞察面板-performance-insights" aria-label="Permalink to &quot;2. 性能洞察面板（Performance Insights）&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 在控制台触发性能分析</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">profile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;My Performance Test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 执行要测试的代码</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">heavyOperation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">profileEnd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;My Performance Test&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><strong>分析维度：</strong></p><ol><li>CPU使用率峰值</li><li>内存分配趋势</li><li>网络请求瀑布图</li><li>用户交互延迟</li></ol><h2 id="二、内存分析高级技术" tabindex="-1">二、内存分析高级技术 <a class="header-anchor" href="#二、内存分析高级技术" aria-label="Permalink to &quot;二、内存分析高级技术&quot;">​</a></h2><h3 id="_1-内存快照比较" tabindex="-1">1. 内存快照比较 <a class="header-anchor" href="#_1-内存快照比较" aria-label="Permalink to &quot;1. 内存快照比较&quot;">​</a></h3>`,10)),(a(),e(h,null,{default:i(()=>[p(l,{id:"mermaid-90",class:"mermaid",graph:"pie%0A%20%20%20%20title%20%E5%86%85%E5%AD%98%E5%8D%A0%E7%94%A8%E7%B1%BB%E5%9E%8B%E5%88%86%E5%B8%83%0A%20%20%20%20%E2%80%9CJS%E5%A0%86%E2%80%9D%20%EF%BC%9A%2045%0A%20%20%20%20%E2%80%9CDOM%E8%8A%82%E7%82%B9%E2%80%9D%20%EF%BC%9A%2030%0A%20%20%20%20%E2%80%9C%E4%BA%8B%E4%BB%B6%E7%9B%91%E5%90%AC%E5%99%A8%E2%80%9D%20%EF%BC%9A%2015%0A%20%20%20%20%E2%80%9C%E9%97%AD%E5%8C%85%E2%80%9D%20%EF%BC%9A%2010%0A"})]),fallback:i(()=>s[1]||(s[1]=[t(" Loading... ")])),_:1})),s[6]||(s[6]=n(`<p><strong>操作步骤：</strong></p><ol><li>执行操作前捕获堆快照（Heap Snapshot 1）</li><li>执行可疑操作</li><li>执行操作后捕获堆快照（Heap Snapshot 2）</li><li>选择 &quot;Comparison&quot; 视图分析差异</li></ol><h3 id="_2-内存泄漏检测" tabindex="-1">2. 内存泄漏检测 <a class="header-anchor" href="#_2-内存泄漏检测" aria-label="Permalink to &quot;2. 内存泄漏检测&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 在控制台查找分离的DOM元素</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> detachedElements</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [];</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setInterval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> el</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;div&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  document.body.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">appendChild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(el);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  document.body.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeChild</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(el);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  detachedElements.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(el); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 内存泄漏！</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>检测模式：</strong></p><ul><li><strong>分配时间线（Allocation Timeline）</strong>：实时跟踪内存分配</li><li><strong>分配采样（Allocation Sampling）</strong>：低开销内存分析</li><li><strong>保留树（Retainers Tree）</strong>：查看对象引用链</li></ul><h2 id="三、网络调试高级功能" tabindex="-1">三、网络调试高级功能 <a class="header-anchor" href="#三、网络调试高级功能" aria-label="Permalink to &quot;三、网络调试高级功能&quot;">​</a></h2><h3 id="_1-高级节流配置" tabindex="-1">1. 高级节流配置 <a class="header-anchor" href="#_1-高级节流配置" aria-label="Permalink to &quot;1. 高级节流配置&quot;">​</a></h3><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 自定义节流配置文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;My 3G+&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;downloadThroughput&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1500</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1024</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 1.5 Mbps</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;uploadThroughput&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">750</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1024</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> /</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 0.75 Mbps</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;latency&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">150</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                        // 150ms</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>应用场景：</strong></p><ul><li>模拟弱网环境</li><li>测试资源加载优先级</li><li>验证缓存策略有效性</li></ul><h3 id="_2-请求重写与拦截" tabindex="-1">2. 请求重写与拦截 <a class="header-anchor" href="#_2-请求重写与拦截" aria-label="Permalink to &quot;2. 请求重写与拦截&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 在控制台重写请求</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.devtools.network.onRequestFinished.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">request</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(request.request.url.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">includes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;analytics.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    request.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">continue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      interceptResponse: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      response: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        statusCode: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        body: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;console.log(&#39;Blocked analytics&#39;)&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>高级功能：</strong></p><ul><li>请求/响应修改（Rewrite）</li><li>请求阻塞（Blocking）</li><li>本地覆盖（Local Overrides）</li></ul><h2 id="四、源代码调试高级技巧" tabindex="-1">四、源代码调试高级技巧 <a class="header-anchor" href="#四、源代码调试高级技巧" aria-label="Permalink to &quot;四、源代码调试高级技巧&quot;">​</a></h2><h3 id="_1-条件断点" tabindex="-1">1. 条件断点 <a class="header-anchor" href="#_1-条件断点" aria-label="Permalink to &quot;1. 条件断点&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> processItems</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 右键添加条件断点: item.id === &#39;special&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(item); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 断点将仅在特殊项触发</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>断点类型：</strong></p><ul><li><strong>条件断点</strong>：满足条件时暂停</li><li><strong>日志点</strong>：记录信息而不暂停</li><li><strong>DOM断点</strong>：元素修改时暂停</li><li><strong>事件监听断点</strong>：特定事件触发时暂停</li></ul><h3 id="_2-异步堆栈跟踪" tabindex="-1">2. 异步堆栈跟踪 <a class="header-anchor" href="#_2-异步堆栈跟踪" aria-label="Permalink to &quot;2. 异步堆栈跟踪&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fetchData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> response</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fetch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/api/data&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 断点1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> response.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();       </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 断点2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  process</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> process</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 断点3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>启用方式：</strong> Settings &gt; Experiments &gt; 勾选 &quot;Async stack traces&quot;</p><h2 id="五、应用面板深度应用" tabindex="-1">五、应用面板深度应用 <a class="header-anchor" href="#五、应用面板深度应用" aria-label="Permalink to &quot;五、应用面板深度应用&quot;">​</a></h2><h3 id="_1-service-worker-调试" tabindex="-1">1. Service Worker 调试 <a class="header-anchor" href="#_1-service-worker-调试" aria-label="Permalink to &quot;1. Service Worker 调试&quot;">​</a></h3>`,25)),(a(),e(h,null,{default:i(()=>[p(l,{id:"mermaid-236",class:"mermaid",graph:"graph%20LR%0A%20%20%20%20A%5B%E6%B3%A8%E5%86%8C%5D%20--%3E%20B%5B%E5%AE%89%E8%A3%85%5D%0A%20%20%20%20B%20--%3E%20C%5B%E6%BF%80%E6%B4%BB%5D%0A%20%20%20%20C%20--%3E%20D%5B%E8%BF%90%E8%A1%8C%5D%0A%20%20%20%20D%20--%3E%20E%5B%E7%BB%88%E6%AD%A2%5D%0A"})]),fallback:i(()=>s[2]||(s[2]=[t(" Loading... ")])),_:1})),s[7]||(s[7]=n(`<p><strong>调试功能：</strong></p><ul><li>强制更新（Update）</li><li>绕过网络（Bypass for network）</li><li>推送通知模拟（Push）</li><li>后台同步测试（Sync）</li></ul><h3 id="_2-indexeddb-检查" tabindex="-1">2. IndexedDB 检查 <a class="header-anchor" href="#_2-indexeddb-检查" aria-label="Permalink to &quot;2. IndexedDB 检查&quot;">​</a></h3><p><strong>操作流程：</strong></p><ol><li>打开 Application &gt; IndexedDB</li><li>查看数据库和对象存储</li><li>实时编辑数据值</li><li>导出/导入数据库</li></ol><h2 id="六、安全与认证调试" tabindex="-1">六、安全与认证调试 <a class="header-anchor" href="#六、安全与认证调试" aria-label="Permalink to &quot;六、安全与认证调试&quot;">​</a></h2><h3 id="_1-跨域问题诊断" tabindex="-1">1. 跨域问题诊断 <a class="header-anchor" href="#_1-跨域问题诊断" aria-label="Permalink to &quot;1. 跨域问题诊断&quot;">​</a></h3><div class="language-http vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 错误信息示例</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Access-Control-Allow-Origin</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://example.com has been blocked by CORS policy</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><strong>解决方案：</strong></p><ol><li>在控制台使用 <code>--disable-web-security</code> 标志启动Chrome（仅开发环境）</li><li>配置正确的CORS响应头</li><li>使用代理服务器绕过限制</li></ol><h3 id="_2-认证与cookie管理" tabindex="-1">2. 认证与Cookie管理 <a class="header-anchor" href="#_2-认证与cookie管理" aria-label="Permalink to &quot;2. 认证与Cookie管理&quot;">​</a></h3><p><strong>高级功能：</strong></p><ul><li>模拟不同登录状态</li><li>编辑Cookie过期时间</li><li>查看HttpOnly Cookies</li><li>测试SameSite属性</li></ul><h2 id="七、设备模拟与传感器" tabindex="-1">七、设备模拟与传感器 <a class="header-anchor" href="#七、设备模拟与传感器" aria-label="Permalink to &quot;七、设备模拟与传感器&quot;">​</a></h2><h3 id="_1-高级设备模拟" tabindex="-1">1. 高级设备模拟 <a class="header-anchor" href="#_1-高级设备模拟" aria-label="Permalink to &quot;1. 高级设备模拟&quot;">​</a></h3><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 自定义设备配置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;My Custom Device&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;userAgent&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Mozilla/5.0 ...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;viewport&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;width&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">414</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;height&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">896</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;deviceScaleFactor&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;mobile&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;touch&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="_2-传感器模拟" tabindex="-1">2. 传感器模拟 <a class="header-anchor" href="#_2-传感器模拟" aria-label="Permalink to &quot;2. 传感器模拟&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 在控制台模拟地理位置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DevToolsAPI.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendOverProtocol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;Emulation.setGeolocationOverride&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    latitude: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">37.7749</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    longitude: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">122.4194</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    accuracy: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>可模拟传感器：</strong></p><ul><li>地理位置</li><li>加速度计</li><li>陀螺仪</li><li>环境光传感器</li></ul><h2 id="八、命令行工具高级用法" tabindex="-1">八、命令行工具高级用法 <a class="header-anchor" href="#八、命令行工具高级用法" aria-label="Permalink to &quot;八、命令行工具高级用法&quot;">​</a></h2><h3 id="_1-实用命令速查" tabindex="-1">1. 实用命令速查 <a class="header-anchor" href="#_1-实用命令速查" aria-label="Permalink to &quot;1. 实用命令速查&quot;">​</a></h3><table tabindex="0"><thead><tr><th>命令</th><th>功能</th></tr></thead><tbody><tr><td><code>$0</code></td><td>引用当前选中的DOM元素</td></tr><tr><td><code>$_</code></td><td>引用上一个表达式结果</td></tr><tr><td><code>copy()</code></td><td>复制内容到剪贴板</td></tr><tr><td><code>monitorEvents(element, &#39;click&#39;)</code></td><td>监控元素事件</td></tr><tr><td><code>getEventListeners(element)</code></td><td>获取元素事件监听器</td></tr><tr><td><code>debug(function)</code></td><td>函数调用时进入调试器</td></tr><tr><td><code>queryObjects(MyClass)</code></td><td>查找所有类实例</td></tr></tbody></table><h3 id="_2-性能监控命令" tabindex="-1">2. 性能监控命令 <a class="header-anchor" href="#_2-性能监控命令" aria-label="Permalink to &quot;2. 性能监控命令&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 监控函数执行时间</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;myOperation&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">myComplexFunction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timeEnd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;myOperation&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 内存使用快照</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.memory; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 显示当前内存状态</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="九、扩展devtools功能" tabindex="-1">九、扩展DevTools功能 <a class="header-anchor" href="#九、扩展devtools功能" aria-label="Permalink to &quot;九、扩展DevTools功能&quot;">​</a></h2><h3 id="_1-自定义面板开发" tabindex="-1">1. 自定义面板开发 <a class="header-anchor" href="#_1-自定义面板开发" aria-label="Permalink to &quot;1. 自定义面板开发&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">chrome.devtools.panels.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;My Panel&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;icon.png&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;panel.html&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">panel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 面板初始化逻辑</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><strong>开发步骤：</strong></p><ol><li>创建manifest.json声明devtools扩展</li><li>实现面板HTML/CSS/JS</li><li>使用DevTools API与页面交互</li></ol><h3 id="_2-推荐高级扩展" tabindex="-1">2. 推荐高级扩展 <a class="header-anchor" href="#_2-推荐高级扩展" aria-label="Permalink to &quot;2. 推荐高级扩展&quot;">​</a></h3><ol><li><strong>React Developer Tools</strong>：React组件树检查</li><li><strong>Vue.js devtools</strong>：Vue组件调试</li><li><strong>Redux DevTools</strong>：Redux状态跟踪</li><li><strong>Apollo Client DevTools</strong>：GraphQL调试</li><li><strong>Lighthouse</strong>：性能评分与优化建议</li></ol><h2 id="十、最佳实践工作流" tabindex="-1">十、最佳实践工作流 <a class="header-anchor" href="#十、最佳实践工作流" aria-label="Permalink to &quot;十、最佳实践工作流&quot;">​</a></h2><h3 id="性能优化工作流" tabindex="-1">性能优化工作流 <a class="header-anchor" href="#性能优化工作流" aria-label="Permalink to &quot;性能优化工作流&quot;">​</a></h3>`,34)),(a(),e(h,null,{default:i(()=>[p(l,{id:"mermaid-524",class:"mermaid",graph:"graph%20LR%0A%20%20%20%20A%5B%E8%AF%86%E5%88%AB%E9%97%AE%E9%A2%98%5D%20--%3E%20B%5B%E6%80%A7%E8%83%BD%E5%BD%95%E5%88%B6%5D%0A%20%20%20%20B%20--%3E%20C%5B%E5%88%86%E6%9E%90%E7%81%AB%E7%84%B0%E5%9B%BE%5D%0A%20%20%20%20C%20--%3E%20D%5B%E5%AE%9A%E4%BD%8D%E7%93%B6%E9%A2%88%5D%0A%20%20%20%20D%20--%3E%20E%5B%E5%AE%9E%E6%96%BD%E4%BC%98%E5%8C%96%5D%0A%20%20%20%20E%20--%3E%20F%5B%E9%AA%8C%E8%AF%81%E6%95%88%E6%9E%9C%5D%0A%20%20%20%20F%20--%3E%7C%E6%9C%AA%E8%A7%A3%E5%86%B3%7C%20B%0A%20%20%20%20F%20--%3E%7C%E5%B7%B2%E8%A7%A3%E5%86%B3%7C%20G%5B%E5%AE%8C%E6%88%90%5D%0A"})]),fallback:i(()=>s[3]||(s[3]=[t(" Loading... ")])),_:1})),s[8]||(s[8]=n('<h3 id="内存泄漏排查流程" tabindex="-1">内存泄漏排查流程 <a class="header-anchor" href="#内存泄漏排查流程" aria-label="Permalink to &quot;内存泄漏排查流程&quot;">​</a></h3><ol><li>创建基准堆快照</li><li>执行可疑操作</li><li>创建新堆快照</li><li>比较快照，查找内存增长</li><li>分析保留树（Retainers Tree）</li><li>修复代码并验证</li></ol><h2 id="十一、实验性功能启用" tabindex="-1">十一、实验性功能启用 <a class="header-anchor" href="#十一、实验性功能启用" aria-label="Permalink to &quot;十一、实验性功能启用&quot;">​</a></h2><h3 id="高级实验功能" tabindex="-1">高级实验功能 <a class="header-anchor" href="#高级实验功能" aria-label="Permalink to &quot;高级实验功能&quot;">​</a></h3><ol><li><strong>CSS网格调试</strong>：可视化网格布局</li><li><strong>WebAuthn标签</strong>：调试生物认证</li><li><strong>协议监视器</strong>：查看底层CDP协议</li><li><strong>自动暗黑模式</strong>：模拟prefers-color-scheme</li></ol><p><strong>启用方式：</strong> Settings &gt; Experiments &gt; 勾选所需功能</p><blockquote><p>本笔记基于Chrome 115+版本，持续更新中<br> 最后更新：2025年7月13日<br> 推荐使用最新Chrome Canary版本获取前沿功能</p></blockquote>',7))])}const C=r(E,[["render",o]]);export{F as __pageData,C as default};
