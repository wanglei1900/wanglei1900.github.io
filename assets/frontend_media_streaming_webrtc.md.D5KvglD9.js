import{_ as e,C as t,c as h,o as a,a7 as i,b as p,w as n,a as r,G as k,a8 as E}from"./chunks/framework.Dtft01Yp.js";const m=JSON.parse('{"title":"WebRTC 实时通信学习笔记","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/media/streaming/webrtc.md","filePath":"frontend/media/streaming/webrtc.md","lastUpdated":1752498754000}'),d={name:"frontend/media/streaming/webrtc.md"};function o(c,s,g,b,y,u){const l=t("Mermaid");return a(),h("div",null,[s[1]||(s[1]=i('<h1 id="webrtc-实时通信学习笔记" tabindex="-1">WebRTC 实时通信学习笔记 <a class="header-anchor" href="#webrtc-实时通信学习笔记" aria-label="Permalink to &quot;WebRTC 实时通信学习笔记&quot;">​</a></h1><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><ol><li><a href="#1-webrtc-简介">WebRTC 简介</a></li><li><a href="#2-核心组件与技术">核心组件与技术</a></li><li><a href="#3-连接建立流程">连接建立流程</a></li><li><a href="#4-关键api详解">关键API详解</a></li><li><a href="#5-数据通道">数据通道</a></li><li><a href="#6-安全机制">安全机制</a></li><li><a href="#7-实际应用场景">实际应用场景</a></li><li><a href="#8-开发工具与调试">开发工具与调试</a></li><li><a href="#9-示例代码">示例代码</a></li><li><a href="#10-资源推荐">资源推荐</a></li></ol><hr><h2 id="_1-webrtc-简介" tabindex="-1">1. WebRTC 简介 <a class="header-anchor" href="#_1-webrtc-简介" aria-label="Permalink to &quot;1. WebRTC 简介&quot;">​</a></h2><p><strong>WebRTC (Web Real-Time Communication)</strong> 是一个开源项目，使浏览器和移动应用能够进行<strong>实时音视频通信</strong>和<strong>点对点数据传输</strong>，无需安装插件或额外软件。</p><h3 id="核心特点" tabindex="-1">核心特点： <a class="header-anchor" href="#核心特点" aria-label="Permalink to &quot;核心特点：&quot;">​</a></h3><ul><li><strong>实时音视频传输</strong>：低延迟媒体流传输</li><li><strong>点对点连接</strong>：直接建立设备间连接</li><li><strong>无需插件</strong>：原生支持现代浏览器</li><li><strong>开源免费</strong>：Apache 2.0许可证</li><li><strong>跨平台</strong>：支持Web、Android、iOS等</li></ul><h3 id="支持情况" tabindex="-1">支持情况： <a class="header-anchor" href="#支持情况" aria-label="Permalink to &quot;支持情况：&quot;">​</a></h3><table tabindex="0"><thead><tr><th>浏览器</th><th>支持版本</th></tr></thead><tbody><tr><td>Chrome</td><td>56+</td></tr><tr><td>Firefox</td><td>52+</td></tr><tr><td>Safari</td><td>11+</td></tr><tr><td>Edge</td><td>79+</td></tr><tr><td>Opera</td><td>43+</td></tr></tbody></table><hr><h2 id="_2-核心组件与技术" tabindex="-1">2. 核心组件与技术 <a class="header-anchor" href="#_2-核心组件与技术" aria-label="Permalink to &quot;2. 核心组件与技术&quot;">​</a></h2><h3 id="_2-1-主要api组件" tabindex="-1">2.1 主要API组件 <a class="header-anchor" href="#_2-1-主要api组件" aria-label="Permalink to &quot;2.1 主要API组件&quot;">​</a></h3><ul><li><strong><code>getUserMedia()</code></strong> - 访问摄像头和麦克风</li><li><strong><code>RTCPeerConnection</code></strong> - 管理点对点连接</li><li><strong><code>RTCDataChannel</code></strong> - 双向数据通信通道</li><li><strong><code>MediaStream</code></strong> - 表示音视频流</li><li><strong><code>MediaStreamTrack</code></strong> - 单个媒体轨道</li></ul><h3 id="_2-2-底层技术协议" tabindex="-1">2.2 底层技术协议 <a class="header-anchor" href="#_2-2-底层技术协议" aria-label="Permalink to &quot;2.2 底层技术协议&quot;">​</a></h3><table tabindex="0"><thead><tr><th>协议</th><th>用途</th></tr></thead><tbody><tr><td><strong>ICE</strong></td><td>穿越NAT和防火墙 (Interactive Connectivity Establishment)</td></tr><tr><td><strong>STUN</strong></td><td>获取公网IP地址 (Session Traversal Utilities for NAT)</td></tr><tr><td><strong>TURN</strong></td><td>中继服务器 (Traversal Using Relays around NAT)</td></tr><tr><td><strong>SDP</strong></td><td>媒体协商 (Session Description Protocol)</td></tr><tr><td><strong>DTLS</strong></td><td>加密传输 (Datagram Transport Layer Security)</td></tr><tr><td><strong>SRTP</strong></td><td>安全实时传输协议 (Secure Real-time Transport Protocol)</td></tr></tbody></table><hr><h2 id="_3-连接建立流程" tabindex="-1">3. 连接建立流程 <a class="header-anchor" href="#_3-连接建立流程" aria-label="Permalink to &quot;3. 连接建立流程&quot;">​</a></h2><h3 id="_3-1-信令流程" tabindex="-1">3.1 信令流程 <a class="header-anchor" href="#_3-1-信令流程" aria-label="Permalink to &quot;3.1 信令流程&quot;">​</a></h3>',19)),(a(),p(E,null,{default:n(()=>[k(l,{id:"mermaid-258",class:"mermaid",graph:"sequenceDiagram%0A%20%20%20%20participant%20A%20as%20%E5%AE%A2%E6%88%B7%E7%AB%AFA%0A%20%20%20%20participant%20S%20as%20%E4%BF%A1%E4%BB%A4%E6%9C%8D%E5%8A%A1%E5%99%A8%0A%20%20%20%20participant%20B%20as%20%E5%AE%A2%E6%88%B7%E7%AB%AFB%0A%20%20%20%20%0A%20%20%20%20A-%3E%3ES%3A%20%E5%8A%A0%E5%85%A5%E6%88%BF%E9%97%B4%0A%20%20%20%20S-%3E%3EB%3A%20%E9%80%9A%E7%9F%A5%E6%96%B0%E7%94%A8%E6%88%B7%E5%8A%A0%E5%85%A5%0A%20%20%20%20B-%3E%3EA%3A%20%E5%8F%91%E9%80%81Offer%20SDP%0A%20%20%20%20A-%3E%3EB%3A%20%E5%8F%91%E9%80%81Answer%20SDP%0A%20%20%20%20A-%3E%3EB%3A%20%E5%8F%91%E9%80%81ICE%E5%80%99%E9%80%89%0A%20%20%20%20B-%3E%3EA%3A%20%E5%8F%91%E9%80%81ICE%E5%80%99%E9%80%89%0A%20%20%20%20A-%3E%3EB%3A%20%E5%BB%BA%E7%AB%8BP2P%E8%BF%9E%E6%8E%A5%0A"})]),fallback:n(()=>s[0]||(s[0]=[r(" Loading... ")])),_:1})),s[2]||(s[2]=i(`<h3 id="_3-2-详细步骤" tabindex="-1">3.2 详细步骤 <a class="header-anchor" href="#_3-2-详细步骤" aria-label="Permalink to &quot;3.2 详细步骤&quot;">​</a></h3><ol><li><strong>信令交换</strong>：通过WebSocket/Socket.io交换会话信息</li><li><strong>媒体协商</strong>：交换SDP描述（offer/answer）</li><li><strong>ICE候选收集</strong>：收集网络路径信息</li><li><strong>候选交换</strong>：通过信令服务器交换ICE候选</li><li><strong>连接建立</strong>：选择最优路径建立P2P连接</li><li><strong>媒体传输</strong>：开始音视频流传输</li></ol><hr><h2 id="_4-关键api详解" tabindex="-1">4. 关键API详解 <a class="header-anchor" href="#_4-关键api详解" aria-label="Permalink to &quot;4. 关键API详解&quot;">​</a></h2><h3 id="_4-1-获取媒体流" tabindex="-1">4.1 获取媒体流 <a class="header-anchor" href="#_4-1-获取媒体流" aria-label="Permalink to &quot;4.1 获取媒体流&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取摄像头和麦克风访问权限</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">navigator.mediaDevices.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getUserMedia</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    video: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        width: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1280</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">720</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    audio: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">stream</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> videoElement</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;localVideo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    videoElement.srcObject </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> stream;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">error</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;媒体获取错误:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, error);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="_4-2-创建rtcpeerconnection" tabindex="-1">4.2 创建RTCPeerConnection <a class="header-anchor" href="#_4-2-创建rtcpeerconnection" aria-label="Permalink to &quot;4.2 创建RTCPeerConnection&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    iceServers: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        { urls: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;stun:stun.l.google.com:19302&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        { </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            urls: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;turn:your.turn.server.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            username: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            credential: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;pass&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> pc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RTCPeerConnection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(config);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 添加本地流</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stream.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTracks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">track</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pc.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addTrack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(track, stream);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 处理远程流</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pc.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ontrack</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> event</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> remoteVideo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;remoteVideo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    remoteVideo.srcObject </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event.streams[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ICE候选处理</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pc.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onicecandidate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> event</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (event.candidate) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 通过信令发送候选</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        signaling.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">send</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;candidate&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            candidate: event.candidate</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><hr><h2 id="_5-数据通道" tabindex="-1">5. 数据通道 <a class="header-anchor" href="#_5-数据通道" aria-label="Permalink to &quot;5. 数据通道&quot;">​</a></h2><p><strong>RTCDataChannel</strong> 允许在P2P连接上传输任意数据</p><h3 id="特性" tabindex="-1">特性： <a class="header-anchor" href="#特性" aria-label="Permalink to &quot;特性：&quot;">​</a></h3><ul><li>低延迟双向通信</li><li>支持可靠/不可靠传输模式</li><li>最大传输大小约256KB</li></ul><h3 id="使用示例" tabindex="-1">使用示例： <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例：&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建数据通道</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dataChannel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pc.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createDataChannel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;chat&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dataChannel.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onopen</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;数据通道已打开&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    dataChannel.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">send</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello WebRTC!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">dataChannel.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onmessage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> event</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;收到消息:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, event.data);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 在对方处理数据通道</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pc.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ondatachannel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> event</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> remoteChannel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> event.channel;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    remoteChannel.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">onmessage</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> event</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;远程消息:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, event.data);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><hr><h2 id="_6-安全机制" tabindex="-1">6. 安全机制 <a class="header-anchor" href="#_6-安全机制" aria-label="Permalink to &quot;6. 安全机制&quot;">​</a></h2><h3 id="强制安全措施" tabindex="-1">强制安全措施： <a class="header-anchor" href="#强制安全措施" aria-label="Permalink to &quot;强制安全措施：&quot;">​</a></h3><ol><li><strong>DTLS-SRTP加密</strong>：所有媒体流自动加密</li><li><strong>身份验证</strong>：通过证书验证端点</li><li><strong>权限控制</strong>：需要用户明确授权媒体访问</li><li><strong>安全上下文</strong>：仅HTTPS或localhost可用</li></ol><h3 id="证书管理" tabindex="-1">证书管理： <a class="header-anchor" href="#证书管理" aria-label="Permalink to &quot;证书管理：&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 自定义证书</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> pc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RTCPeerConnection</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    iceServers: [],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    certificates: [{</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        algorithm: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;RSASSA-PKCS1-v1_5&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        modulusLength: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2048</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        hash: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SHA-256&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><hr><h2 id="_7-实际应用场景" tabindex="-1">7. 实际应用场景 <a class="header-anchor" href="#_7-实际应用场景" aria-label="Permalink to &quot;7. 实际应用场景&quot;">​</a></h2><ol><li><strong>视频会议系统</strong>：Google Meet, Zoom Web</li><li><strong>远程协作工具</strong>：共享白板、远程控制</li><li><strong>实时游戏</strong>：低延迟P2P游戏</li><li><strong>文件共享</strong>：P2P文件传输</li><li><strong>物联网控制</strong>：实时设备监控</li><li><strong>直播应用</strong>：低延迟直播推流</li></ol><hr><h2 id="_8-开发工具与调试" tabindex="-1">8. 开发工具与调试 <a class="header-anchor" href="#_8-开发工具与调试" aria-label="Permalink to &quot;8. 开发工具与调试&quot;">​</a></h2><h3 id="调试工具" tabindex="-1">调试工具： <a class="header-anchor" href="#调试工具" aria-label="Permalink to &quot;调试工具：&quot;">​</a></h3><ul><li><strong>chrome://webrtc-internals</strong> - Chrome内置调试</li><li><strong>about:webrtc</strong> - Firefox内置调试</li><li><strong>WebRTC Troubleshooter</strong> - 网络检测工具</li></ul><h3 id="常见问题排查" tabindex="-1">常见问题排查： <a class="header-anchor" href="#常见问题排查" aria-label="Permalink to &quot;常见问题排查：&quot;">​</a></h3><ol><li><strong>ICE失败</strong>：检查STUN/TURN服务器配置</li><li><strong>媒体问题</strong>：验证设备权限和约束</li><li><strong>连接超时</strong>：调整ICE超时设置</li><li><strong>NAT穿透失败</strong>：添加TURN服务器备用</li></ol><hr><h2 id="_9-示例代码" tabindex="-1">9. 示例代码 <a class="header-anchor" href="#_9-示例代码" aria-label="Permalink to &quot;9. 示例代码&quot;">​</a></h2><h3 id="完整连接示例" tabindex="-1">完整连接示例： <a class="header-anchor" href="#完整连接示例" aria-label="Permalink to &quot;完整连接示例：&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 发起端</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createOffer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> offer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pc.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createOffer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pc.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setLocalDescription</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(offer);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    signaling.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">send</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;offer&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sdp: offer.sdp });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 接收端</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">signaling.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;offer&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> offer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pc.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setRemoteDescription</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RTCSessionDescription</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(offer));</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> answer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pc.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createAnswer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pc.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setLocalDescription</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(answer);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    signaling.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">send</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;answer&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, sdp: answer.sdp });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 添加候选</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">signaling.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;candidate&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">candidate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pc.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addIceCandidate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RTCIceCandidate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(candidate));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><hr><h2 id="_10-资源推荐" tabindex="-1">10. 资源推荐 <a class="header-anchor" href="#_10-资源推荐" aria-label="Permalink to &quot;10. 资源推荐&quot;">​</a></h2><h3 id="官方资源" tabindex="-1">官方资源： <a class="header-anchor" href="#官方资源" aria-label="Permalink to &quot;官方资源：&quot;">​</a></h3><ul><li><a href="https://webrtc.org/" target="_blank" rel="noreferrer">WebRTC 官方网站</a></li><li><a href="https://github.com/webrtc" target="_blank" rel="noreferrer">WebRTC GitHub</a></li><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API" target="_blank" rel="noreferrer">MDN WebRTC 文档</a></li></ul><h3 id="学习资源" tabindex="-1">学习资源： <a class="header-anchor" href="#学习资源" aria-label="Permalink to &quot;学习资源：&quot;">​</a></h3><ul><li><a href="https://webrtcforthecurious.com/" target="_blank" rel="noreferrer">WebRTC for the Curious</a></li><li><a href="https://webrtc.github.io/samples/" target="_blank" rel="noreferrer">WebRTC Samples</a></li><li><a href="https://codelabs.developers.google.com/codelabs/webrtc-web" target="_blank" rel="noreferrer">Codelab: Realtime communication with WebRTC</a></li></ul><h3 id="开源项目" tabindex="-1">开源项目： <a class="header-anchor" href="#开源项目" aria-label="Permalink to &quot;开源项目：&quot;">​</a></h3><ul><li><a href="https://github.com/feross/simple-peer" target="_blank" rel="noreferrer">Simple-Peer</a> - 简化WebRTC API</li><li><a href="https://peerjs.com/" target="_blank" rel="noreferrer">PeerJS</a> - 点对点数据通信库</li><li><a href="https://mediasoup.org/" target="_blank" rel="noreferrer">Mediasoup</a> - WebRTC SFU框架</li></ul><blockquote><p><strong>最佳实践提示</strong>：始终在HTTPS环境下部署WebRTC应用，并准备TURN服务器作为NAT穿透失败的备用方案。</p></blockquote>`,43))])}const A=e(d,[["render",o]]);export{m as __pageData,A as default};
