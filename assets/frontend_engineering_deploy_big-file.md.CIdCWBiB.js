import{_ as e,c as r,o as t,a7 as i}from"./chunks/framework.Dtft01Yp.js";const u=JSON.parse('{"title":"【性能优化】大文件性能优化方向","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/engineering/deploy/big-file.md","filePath":"frontend/engineering/deploy/big-file.md","lastUpdated":1751966758000}'),o={name:"frontend/engineering/deploy/big-file.md"};function n(h,a,l,d,s,c){return t(),r("div",null,a[0]||(a[0]=[i('<h1 id="【性能优化】大文件性能优化方向" tabindex="-1">【性能优化】大文件性能优化方向 <a class="header-anchor" href="#【性能优化】大文件性能优化方向" aria-label="Permalink to &quot;【性能优化】大文件性能优化方向&quot;">​</a></h1><p><a href="https://github.com/pro-collection/interview-question/issues/957" target="_blank" rel="noreferrer">参考文章</a></p><h2 id="_1-文件压缩" tabindex="-1">1 文件压缩 <a class="header-anchor" href="#_1-文件压缩" aria-label="Permalink to &quot;1 文件压缩&quot;">​</a></h2><h3 id="_1-1-服务器端压缩" tabindex="-1">1.1 服务器端压缩： <a class="header-anchor" href="#_1-1-服务器端压缩" aria-label="Permalink to &quot;1.1 服务器端压缩：&quot;">​</a></h3><h3 id="_1-2-客户端解压缩" tabindex="-1">1.2 客户端解压缩： <a class="header-anchor" href="#_1-2-客户端解压缩" aria-label="Permalink to &quot;1.2 客户端解压缩：&quot;">​</a></h3><h2 id="_2-文件分割与懒加载" tabindex="-1">2 文件分割与懒加载 <a class="header-anchor" href="#_2-文件分割与懒加载" aria-label="Permalink to &quot;2 文件分割与懒加载&quot;">​</a></h2><h3 id="_2-1-文件分割" tabindex="-1">2.1 文件分割： <a class="header-anchor" href="#_2-1-文件分割" aria-label="Permalink to &quot;2.1 文件分割：&quot;">​</a></h3><h3 id="_2-2-懒加载" tabindex="-1">2.2 懒加载： <a class="header-anchor" href="#_2-2-懒加载" aria-label="Permalink to &quot;2.2 懒加载：&quot;">​</a></h3><h2 id="_3-缓存策略" tabindex="-1">3 缓存策略 <a class="header-anchor" href="#_3-缓存策略" aria-label="Permalink to &quot;3 缓存策略&quot;">​</a></h2><h3 id="_3-1-浏览器缓存" tabindex="-1">3.1 浏览器缓存： <a class="header-anchor" href="#_3-1-浏览器缓存" aria-label="Permalink to &quot;3.1 浏览器缓存：&quot;">​</a></h3><h3 id="_3-2-缓存更新机制" tabindex="-1">3.2 缓存更新机制： <a class="header-anchor" href="#_3-2-缓存更新机制" aria-label="Permalink to &quot;3.2 缓存更新机制：&quot;">​</a></h3><h2 id="_4-优化加载顺序" tabindex="-1">4 优化加载顺序 <a class="header-anchor" href="#_4-优化加载顺序" aria-label="Permalink to &quot;4 优化加载顺序&quot;">​</a></h2><h3 id="_4-1-关键资源优先加载" tabindex="-1">4.1 关键资源优先加载： <a class="header-anchor" href="#_4-1-关键资源优先加载" aria-label="Permalink to &quot;4.1 关键资源优先加载：&quot;">​</a></h3><h3 id="_4-2-异步加载" tabindex="-1">4.2 异步加载： <a class="header-anchor" href="#_4-2-异步加载" aria-label="Permalink to &quot;4.2 异步加载：&quot;">​</a></h3><h2 id="_5-cdn-加速" tabindex="-1">5 CDN 加速 <a class="header-anchor" href="#_5-cdn-加速" aria-label="Permalink to &quot;5 CDN 加速&quot;">​</a></h2><h3 id="_5-1-使用内容分发网络-cdn" tabindex="-1">5.1 使用内容分发网络（CDN）： <a class="header-anchor" href="#_5-1-使用内容分发网络-cdn" aria-label="Permalink to &quot;5.1 使用内容分发网络（CDN）：&quot;">​</a></h3><h3 id="_5-2-cdn-缓存" tabindex="-1">5.2 CDN 缓存： <a class="header-anchor" href="#_5-2-cdn-缓存" aria-label="Permalink to &quot;5.2 CDN 缓存：&quot;">​</a></h3><h2 id="_6-http2-优化网站性能" tabindex="-1">6 HTTP2 优化网站性能 <a class="header-anchor" href="#_6-http2-优化网站性能" aria-label="Permalink to &quot;6 HTTP2 优化网站性能&quot;">​</a></h2>',18)]))}const b=e(o,[["render",n]]);export{u as __pageData,b as default};
