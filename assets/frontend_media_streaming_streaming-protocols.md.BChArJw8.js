import{_ as p,C as E,c as d,o as a,a7 as t,b as n,w as i,a as e,G as r,a8 as h}from"./chunks/framework.Dtft01Yp.js";const B=JSON.parse('{"title":"LS/DASH协议学习笔记","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/media/streaming/streaming-protocols.md","filePath":"frontend/media/streaming/streaming-protocols.md","lastUpdated":1752498754000}'),o={name:"frontend/media/streaming/streaming-protocols.md"};function k(g,s,u,A,m,b){const l=E("Mermaid");return a(),d("div",null,[s[4]||(s[4]=t('<h1 id="ls-dash协议学习笔记" tabindex="-1">LS/DASH协议学习笔记 <a class="header-anchor" href="#ls-dash协议学习笔记" aria-label="Permalink to &quot;LS/DASH协议学习笔记&quot;">​</a></h1><h2 id="协议概述" tabindex="-1">协议概述 <a class="header-anchor" href="#协议概述" aria-label="Permalink to &quot;协议概述&quot;">​</a></h2><p><strong>LS/DASH</strong>（Dynamic Adaptive Streaming over HTTP）是一种基于HTTP的自适应比特率流媒体技术标准，由MPEG组织制定（ISO/IEC 23009-1）。它允许客户端根据网络状况动态调整视频质量。</p><h3 id="核心特点" tabindex="-1">核心特点 <a class="header-anchor" href="#核心特点" aria-label="Permalink to &quot;核心特点&quot;">​</a></h3><ul><li><strong>自适应比特率</strong>：根据网络带宽动态调整视频质量</li><li><strong>基于HTTP</strong>：使用标准HTTP协议传输，易于通过防火墙</li><li><strong>分片传输</strong>：媒体内容被分割成小文件（segment）传输</li><li><strong>平台无关</strong>：支持任何支持HTTP的设备</li><li><strong>标准统一</strong>：替代了早期的私有协议（如HDS、HLS、Smooth）</li></ul><h2 id="系统架构" tabindex="-1">系统架构 <a class="header-anchor" href="#系统架构" aria-label="Permalink to &quot;系统架构&quot;">​</a></h2>',6)),(a(),n(h,null,{default:i(()=>[r(l,{id:"mermaid-42",class:"mermaid",graph:"graph%20LR%0AA%5B%E5%86%85%E5%AE%B9%E5%87%86%E5%A4%87%5D%20--%3E%20B%5B%E5%AA%92%E4%BD%93%E7%BC%96%E7%A0%81%5D%0AB%20--%3E%20C%5B%E5%88%86%E7%89%87%E4%B8%8E%E5%8A%A0%E5%AF%86%5D%0AC%20--%3E%20D%5B%E7%94%9F%E6%88%90MPD%5D%0AD%20--%3E%20E%5BCDN%E5%88%86%E5%8F%91%5D%0AE%20--%3E%20F%5B%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%92%AD%E6%94%BE%5D%0AF%20--%3E%20G%5B%E8%87%AA%E9%80%82%E5%BA%94%E5%86%B3%E7%AD%96%5D%0AG%20--%3E%20F%0A"})]),fallback:i(()=>s[0]||(s[0]=[e(" Loading... ")])),_:1})),s[5]||(s[5]=t(`<h2 id="关键组件" tabindex="-1">关键组件 <a class="header-anchor" href="#关键组件" aria-label="Permalink to &quot;关键组件&quot;">​</a></h2><h3 id="_1-mpd文件-media-presentation-description" tabindex="-1">1. MPD文件（Media Presentation Description） <a class="header-anchor" href="#_1-mpd文件-media-presentation-description" aria-label="Permalink to &quot;1. MPD文件（Media Presentation Description）&quot;">​</a></h3><ul><li>XML格式的清单文件</li><li>描述媒体内容结构： <ul><li>时间段（Periods）</li><li>适配集（Adaptation Sets）</li><li>表示（Representations）</li><li>分段（Segments）</li></ul></li></ul><div class="language-xml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">MPD</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> xmlns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;urn:mpeg:dash:schema:mpd:2011&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Period</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> duration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;PT0H10M0S&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">AdaptationSet</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> mimeType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;video/mp4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Representation</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bandwidth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1000000&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;640&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;360&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">SegmentList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">SegmentURL</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> media</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;seg_1.m4s&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">SegmentList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Representation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">AdaptationSet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Period</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">MPD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="_2-媒体分段-segments" tabindex="-1">2. 媒体分段（Segments） <a class="header-anchor" href="#_2-媒体分段-segments" aria-label="Permalink to &quot;2. 媒体分段（Segments）&quot;">​</a></h3><ul><li>包含实际媒体数据的小文件</li><li>典型时长：2-10秒</li><li>格式支持： <ul><li>ISO BMFF（.m4s）</li><li>MPEG-2 TS（.ts）</li><li>WebM（.webm）</li></ul></li></ul><h3 id="_3-表示-representations" tabindex="-1">3. 表示（Representations） <a class="header-anchor" href="#_3-表示-representations" aria-label="Permalink to &quot;3. 表示（Representations）&quot;">​</a></h3><ul><li>同一内容的不同编码版本</li><li>参数差异： <ul><li>分辨率（如：480p, 720p, 1080p）</li><li>比特率（如：500kbps, 1Mbps, 3Mbps）</li><li>编解码器（如：H.264, HEVC, AV1）</li></ul></li></ul><h2 id="工作流程" tabindex="-1">工作流程 <a class="header-anchor" href="#工作流程" aria-label="Permalink to &quot;工作流程&quot;">​</a></h2><h3 id="客户端工作流程" tabindex="-1">客户端工作流程 <a class="header-anchor" href="#客户端工作流程" aria-label="Permalink to &quot;客户端工作流程&quot;">​</a></h3>`,10)),(a(),n(h,null,{default:i(()=>[r(l,{id:"mermaid-159",class:"mermaid",graph:"sequenceDiagram%0A%20%20%20%20participant%20Client%0A%20%20%20%20participant%20Server%0A%20%20%20%20Client-%3E%3EServer%3A%20%E8%AF%B7%E6%B1%82MPD%E6%96%87%E4%BB%B6%0A%20%20%20%20Server--%3E%3EClient%3A%20%E8%BF%94%E5%9B%9EMPD%0A%20%20%20%20loop%20%E6%92%AD%E6%94%BE%E8%BF%87%E7%A8%8B%0A%20%20%20%20%20%20%20%20Client-%3E%3EClient%3A%20%E8%AF%84%E4%BC%B0%E7%BD%91%E7%BB%9C%E7%8A%B6%E5%86%B5%0A%20%20%20%20%20%20%20%20Client-%3E%3EServer%3A%20%E8%AF%B7%E6%B1%82%E5%90%88%E9%80%82%E7%9A%84%E5%88%86%E6%AE%B5%0A%20%20%20%20%20%20%20%20Server--%3E%3EClient%3A%20%E8%BF%94%E5%9B%9E%E5%AA%92%E4%BD%93%E5%88%86%E6%AE%B5%0A%20%20%20%20%20%20%20%20Client-%3E%3EClient%3A%20%E8%A7%A3%E7%A0%81%E6%92%AD%E6%94%BE%0A%20%20%20%20end%0A"})]),fallback:i(()=>s[1]||(s[1]=[e(" Loading... ")])),_:1})),s[6]||(s[6]=t('<h3 id="自适应算法" tabindex="-1">自适应算法 <a class="header-anchor" href="#自适应算法" aria-label="Permalink to &quot;自适应算法&quot;">​</a></h3><ol><li>带宽估计（基于下载速度）</li><li>缓冲区状态监测</li><li>选择最合适的Representation</li><li>平滑切换避免卡顿</li></ol><h2 id="内容准备流程" tabindex="-1">内容准备流程 <a class="header-anchor" href="#内容准备流程" aria-label="Permalink to &quot;内容准备流程&quot;">​</a></h2><h3 id="编码与封装" tabindex="-1">编码与封装 <a class="header-anchor" href="#编码与封装" aria-label="Permalink to &quot;编码与封装&quot;">​</a></h3>',4)),(a(),n(h,null,{default:i(()=>[r(l,{id:"mermaid-191",class:"mermaid",graph:"flowchart%20TD%0A%20%20%20%20A%5B%E5%8E%9F%E5%A7%8B%E5%AA%92%E4%BD%93%5D%20--%3E%20B%5B%E5%A4%9A%E7%A0%81%E7%8E%87%E7%BC%96%E7%A0%81%5D%0A%20%20%20%20B%20--%3E%20C%5B%E5%88%86%E6%AE%B5%E5%A4%84%E7%90%86%5D%0A%20%20%20%20C%20--%3E%20D%5B%E5%8A%A0%E5%AF%86%2FDRM%5D%0A%20%20%20%20D%20--%3E%20E%5B%E7%94%9F%E6%88%90MPD%5D%0A%20%20%20%20E%20--%3E%20F%5B%E4%B8%8A%E4%BC%A0CDN%5D%0A"})]),fallback:i(()=>s[2]||(s[2]=[e(" Loading... ")])),_:1})),s[7]||(s[7]=t(`<h2 id="优势与挑战" tabindex="-1">优势与挑战 <a class="header-anchor" href="#优势与挑战" aria-label="Permalink to &quot;优势与挑战&quot;">​</a></h2><h3 id="✅-优势" tabindex="-1">✅ 优势 <a class="header-anchor" href="#✅-优势" aria-label="Permalink to &quot;✅ 优势&quot;">​</a></h3><ul><li><strong>网络适应性</strong>：自动调整视频质量</li><li><strong>部署简单</strong>：使用现有HTTP基础设施</li><li><strong>容错性</strong>：分段传输增强可靠性</li><li><strong>跨平台</strong>：支持Web、移动、电视等设备</li><li><strong>商业友好</strong>：支持DRM和广告插入</li></ul><h3 id="⚠️-挑战" tabindex="-1">⚠️ 挑战 <a class="header-anchor" href="#⚠️-挑战" aria-label="Permalink to &quot;⚠️ 挑战&quot;">​</a></h3><ul><li>初始延迟问题</li><li>多码率编码增加存储成本</li><li>复杂客户端实现</li><li>CDN负载均衡要求</li><li>不同实现间的兼容性</li></ul><h2 id="与hls对比" tabindex="-1">与HLS对比 <a class="header-anchor" href="#与hls对比" aria-label="Permalink to &quot;与HLS对比&quot;">​</a></h2><table tabindex="0"><thead><tr><th>特性</th><th>DASH</th><th>HLS</th></tr></thead><tbody><tr><td>标准组织</td><td>MPEG (ISO)</td><td>Apple</td></tr><tr><td>容器格式</td><td>ISO BMFF, WebM</td><td>MPEG-2 TS, fMP4</td></tr><tr><td>清单文件</td><td>MPD (.mpd)</td><td>M3U8 (.m3u8)</td></tr><tr><td>DRM支持</td><td>CENC, Widevine等</td><td>FairPlay, Widevine</td></tr><tr><td>多音频/字幕</td><td>完善支持</td><td>有限支持</td></tr><tr><td>低延迟模式</td><td>LL-DASH</td><td>LHLS</td></tr></tbody></table><h2 id="最佳实践" tabindex="-1">最佳实践 <a class="header-anchor" href="#最佳实践" aria-label="Permalink to &quot;最佳实践&quot;">​</a></h2><h3 id="编码建议" tabindex="-1">编码建议 <a class="header-anchor" href="#编码建议" aria-label="Permalink to &quot;编码建议&quot;">​</a></h3><ul><li><strong>分辨率阶梯</strong>：360p, 480p, 720p, 1080p, 4K</li><li><strong>比特率配置</strong>：<div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 示例比特率阶梯（1080p内容）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bitrates </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;360p&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">600</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># kbps</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;480p&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;720p&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;1080p&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;1440p&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;4K&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li><li><strong>关键帧对齐</strong>：确保所有Representation分段边界一致</li></ul><h3 id="cdn优化" tabindex="-1">CDN优化 <a class="header-anchor" href="#cdn优化" aria-label="Permalink to &quot;CDN优化&quot;">​</a></h3><ul><li>HTTP/2或HTTP/3支持</li><li>分段预取</li><li>边缘缓存优化</li><li>BOLA等缓存感知算法</li></ul><h2 id="低延迟dash-ll-dash" tabindex="-1">低延迟DASH（LL-DASH） <a class="header-anchor" href="#低延迟dash-ll-dash" aria-label="Permalink to &quot;低延迟DASH（LL-DASH）&quot;">​</a></h2><p><strong>目标</strong>：将端到端延迟降至3秒以内</p><h3 id="关键技术" tabindex="-1">关键技术 <a class="header-anchor" href="#关键技术" aria-label="Permalink to &quot;关键技术&quot;">​</a></h3><ol><li><strong>分块传输编码</strong>（Chunked Transfer Encoding）</li><li><strong>更小分段</strong>（200-500ms）</li><li><strong>预加载提示</strong></li><li><strong>服务端推送</strong></li><li>CMAF（Common Media Application Format）</li></ol>`,16)),(a(),n(h,null,{default:i(()=>[r(l,{id:"mermaid-426",class:"mermaid",graph:"graph%20LR%0AA%5B%E7%BC%96%E7%A0%81%E5%99%A8%5D%20--%20CMAF%E7%89%87%E6%AE%B5%20--%3E%20B%5B%E6%89%93%E5%8C%85%E5%99%A8%5D%0AB%20--%20%E5%88%86%E5%9D%97%E4%BC%A0%E8%BE%93%20--%3E%20C%5BCDN%5D%0AC%20--%20%E4%BD%8E%E5%BB%B6%E8%BF%9F%E5%88%86%E5%8F%91%20--%3E%20D%5B%E5%AE%A2%E6%88%B7%E7%AB%AF%5D%0A"})]),fallback:i(()=>s[3]||(s[3]=[e(" Loading... ")])),_:1})),s[8]||(s[8]=t('<h2 id="行业应用" tabindex="-1">行业应用 <a class="header-anchor" href="#行业应用" aria-label="Permalink to &quot;行业应用&quot;">​</a></h2><ul><li><strong>视频平台</strong>：YouTube，Netflix</li><li><strong>直播服务</strong>：体育赛事，新闻直播</li><li><strong>IPTV系统</strong>：运营商电视服务</li><li><strong>教育平台</strong>：在线课程直播</li><li><strong>游戏流</strong>：云游戏服务</li></ul><h2 id="扩展学习资源" tabindex="-1">扩展学习资源 <a class="header-anchor" href="#扩展学习资源" aria-label="Permalink to &quot;扩展学习资源&quot;">​</a></h2><ol><li><strong>标准文档</strong>：ISO/IEC 23009-1</li><li><strong>开源项目</strong>： <ul><li><a href="https://github.com/Dash-Industry-Forum/dash.js" target="_blank" rel="noreferrer">dash.js</a> - 参考客户端实现</li><li><a href="https://github.com/gpac/gpac" target="_blank" rel="noreferrer">GPAC</a> - MP4Box工具</li><li><a href="https://github.com/shaka-project/shaka-player" target="_blank" rel="noreferrer">Shaka Player</a> - Google播放器</li></ul></li><li><strong>测试内容</strong>：<a href="https://reference.dashif.org/dash.js/" target="_blank" rel="noreferrer">https://reference.dashif.org/dash.js/</a></li><li><strong>行业论坛</strong>：DASH Industry Forum (DASH-IF)</li></ol><blockquote><p>本笔记持续更新于：2025年7月13日<br> 协议版本参考：ISO/IEC 23009-1:2023 (DASH v6)</p></blockquote>',5))])}const F=p(o,[["render",k]]);export{B as __pageData,F as default};
