import{_ as k,C as r,c as E,o as a,a7 as n,b as t,w as i,a as h,G as e,a8 as p}from"./chunks/framework.Dtft01Yp.js";const m=JSON.parse('{"title":"前端性能分析技巧 - 调试工具深度指南","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/performance/tools/network-analysis.md","filePath":"frontend/performance/tools/network-analysis.md","lastUpdated":1752498754000}'),d={name:"frontend/performance/tools/network-analysis.md"};function g(o,s,c,y,b,u){const l=r("Mermaid");return a(),E("div",null,[s[6]||(s[6]=n('<h1 id="前端性能分析技巧-调试工具深度指南" tabindex="-1">前端性能分析技巧 - 调试工具深度指南 <a class="header-anchor" href="#前端性能分析技巧-调试工具深度指南" aria-label="Permalink to &quot;前端性能分析技巧 - 调试工具深度指南&quot;">​</a></h1><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><ul><li><a href="#性能分析的重要性">性能分析的重要性</a></li><li><a href="#核心性能指标解析">核心性能指标解析</a></li><li><a href="#chrome-devtools-深度指南">Chrome DevTools 深度指南</a></li><li><a href="#网络性能分析技巧">网络性能分析技巧</a></li><li><a href="#渲染性能优化分析">渲染性能优化分析</a></li><li><a href="#javascript-执行性能分析">JavaScript 执行性能分析</a></li><li><a href="#内存分析技巧">内存分析技巧</a></li><li><a href="#性能监控与实时分析">性能监控与实时分析</a></li><li><a href="#高级性能分析技术">高级性能分析技术</a></li><li><a href="#性能优化工作流">性能优化工作流</a></li></ul><hr><h2 id="性能分析的重要性" tabindex="-1">性能分析的重要性 <a class="header-anchor" href="#性能分析的重要性" aria-label="Permalink to &quot;性能分析的重要性&quot;">​</a></h2><h3 id="为什么需要性能分析" tabindex="-1">为什么需要性能分析 <a class="header-anchor" href="#为什么需要性能分析" aria-label="Permalink to &quot;为什么需要性能分析&quot;">​</a></h3>',6)),(a(),t(p,null,{default:i(()=>[e(l,{id:"mermaid-65",class:"mermaid",graph:"graph%20TD%0A%20%20%20%20A%5B%E7%94%A8%E6%88%B7%E4%BD%93%E9%AA%8C%5D%20--%3E%20B%5B%E5%8A%A0%E8%BD%BD%E9%80%9F%E5%BA%A6%5D%0A%20%20%20%20A%20--%3E%20C%5B%E4%BA%A4%E4%BA%92%E6%B5%81%E7%95%85%E5%BA%A6%5D%0A%20%20%20%20A%20--%3E%20D%5B%E8%B5%84%E6%BA%90%E6%B6%88%E8%80%97%5D%0A%20%20%20%20B%20--%3E%20E%5B%E7%94%A8%E6%88%B7%E7%95%99%E5%AD%98%E7%8E%87%5D%0A%20%20%20%20C%20--%3E%20F%5B%E8%BD%AC%E5%8C%96%E7%8E%87%5D%0A%20%20%20%20D%20--%3E%20G%5B%E8%AE%BE%E5%A4%87%E5%85%BC%E5%AE%B9%E6%80%A7%5D%0A"})]),fallback:i(()=>s[0]||(s[0]=[h(" Loading... ")])),_:1})),s[7]||(s[7]=n('<h3 id="性能分析目标" tabindex="-1">性能分析目标 <a class="header-anchor" href="#性能分析目标" aria-label="Permalink to &quot;性能分析目标&quot;">​</a></h3><ol><li><strong>识别瓶颈</strong>：定位性能问题根源</li><li><strong>量化指标</strong>：测量关键性能数据</li><li><strong>优化验证</strong>：确认优化措施有效性</li><li><strong>预防退化</strong>：建立持续监控机制</li></ol><hr><h2 id="核心性能指标解析" tabindex="-1">核心性能指标解析 <a class="header-anchor" href="#核心性能指标解析" aria-label="Permalink to &quot;核心性能指标解析&quot;">​</a></h2><h3 id="web-vitals-核心指标" tabindex="-1">Web Vitals 核心指标 <a class="header-anchor" href="#web-vitals-核心指标" aria-label="Permalink to &quot;Web Vitals 核心指标&quot;">​</a></h3><table tabindex="0"><thead><tr><th>指标</th><th>描述</th><th>优秀阈值</th><th>测量工具</th></tr></thead><tbody><tr><td><strong>LCP</strong></td><td>最大内容绘制</td><td>≤2.5s</td><td>Lighthouse</td></tr><tr><td><strong>FID</strong></td><td>首次输入延迟</td><td>≤100ms</td><td>DevTools</td></tr><tr><td><strong>CLS</strong></td><td>累积布局偏移</td><td>≤0.1</td><td>LayoutShift API</td></tr><tr><td><strong>INP</strong></td><td>交互延迟</td><td>≤200ms</td><td>Event Timing API</td></tr><tr><td><strong>TTFB</strong></td><td>首字节时间</td><td>≤600ms</td><td>DevTools网络面板</td></tr></tbody></table><h3 id="关键用户旅程指标" tabindex="-1">关键用户旅程指标 <a class="header-anchor" href="#关键用户旅程指标" aria-label="Permalink to &quot;关键用户旅程指标&quot;">​</a></h3><ol><li><strong>FCP</strong> (First Contentful Paint)：首次内容绘制</li><li><strong>TTI</strong> (Time to Interactive)：可交互时间</li><li><strong>TBT</strong> (Total Blocking Time)：总阻塞时间</li><li><strong>SI</strong> (Speed Index)：速度指数</li></ol><hr><h2 id="chrome-devtools-深度指南" tabindex="-1">Chrome DevTools 深度指南 <a class="header-anchor" href="#chrome-devtools-深度指南" aria-label="Permalink to &quot;Chrome DevTools 深度指南&quot;">​</a></h2><h3 id="性能面板工作流" tabindex="-1">性能面板工作流 <a class="header-anchor" href="#性能面板工作流" aria-label="Permalink to &quot;性能面板工作流&quot;">​</a></h3>',11)),(a(),t(p,null,{default:i(()=>[e(l,{id:"mermaid-220",class:"mermaid",graph:"sequenceDiagram%0A%20%20%20%20participant%20%E7%94%A8%E6%88%B7%0A%20%20%20%20participant%20DevTools%0A%20%20%20%20%E7%94%A8%E6%88%B7%20-%3E%3E%20DevTools%3A%201.%20%E5%BC%80%E5%A7%8B%E5%BD%95%E5%88%B6%0A%20%20%20%20DevTools%20-%3E%3E%20%E6%B5%8F%E8%A7%88%E5%99%A8%3A%202.%20%E6%94%B6%E9%9B%86%E6%80%A7%E8%83%BD%E6%95%B0%E6%8D%AE%0A%20%20%20%20%E6%B5%8F%E8%A7%88%E5%99%A8%20-%3E%3E%20DevTools%3A%203.%20%E8%BF%94%E5%9B%9E%E6%80%A7%E8%83%BD%E6%95%B0%E6%8D%AE%0A%20%20%20%20%E7%94%A8%E6%88%B7%20-%3E%3E%20DevTools%3A%204.%20%E5%81%9C%E6%AD%A2%E5%BD%95%E5%88%B6%0A%20%20%20%20DevTools%20-%3E%3E%20%E7%94%A8%E6%88%B7%3A%205.%20%E5%B1%95%E7%A4%BA%E6%80%A7%E8%83%BD%E6%8A%A5%E5%91%8A%0A"})]),fallback:i(()=>s[1]||(s[1]=[h(" Loading... ")])),_:1})),s[8]||(s[8]=n(`<h3 id="关键功能解析" tabindex="-1">关键功能解析 <a class="header-anchor" href="#关键功能解析" aria-label="Permalink to &quot;关键功能解析&quot;">​</a></h3><ol><li><p><strong>Performance 面板</strong></p><ul><li>火焰图分析</li><li>主线程活动</li><li>帧率分析</li></ul></li><li><p><strong>Memory 面板</strong></p><ul><li>堆快照比较</li><li>内存分配时间线</li></ul></li><li><p><strong>Network 面板</strong></p><ul><li>请求瀑布流分析</li><li>资源优先级标记</li></ul></li><li><p><strong>Lighthouse 面板</strong></p><ul><li>综合性能评分</li><li>优化建议</li></ul></li></ol><hr><h2 id="网络性能分析技巧" tabindex="-1">网络性能分析技巧 <a class="header-anchor" href="#网络性能分析技巧" aria-label="Permalink to &quot;网络性能分析技巧&quot;">​</a></h2><h3 id="网络请求优化" tabindex="-1">网络请求优化 <a class="header-anchor" href="#网络请求优化" aria-label="Permalink to &quot;网络请求优化&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 资源预加载示例</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;preload&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;critical.css&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> as</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;style&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rel</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;preconnect&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://cdn.example.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">// 资源优先级控制</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;critical.js&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fetchpriority</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;high&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hero.jpg&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fetchpriority</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;high&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="网络分析技巧" tabindex="-1">网络分析技巧 <a class="header-anchor" href="#网络分析技巧" aria-label="Permalink to &quot;网络分析技巧&quot;">​</a></h3><ol><li><p><strong>识别关键请求链</strong></p><ul><li>使用DevTools的Critical Request Chains</li><li>优化关键路径资源</li></ul></li><li><p><strong>HTTP/2 诊断</strong></p><ul><li>检查多路复用效果</li><li>验证服务器推送</li></ul></li><li><p><strong>缓存策略分析</strong></p><ul><li>检查Cache-Control头部</li><li>验证ETag/Last-Modified</li></ul></li></ol><h3 id="网络节流设置" tabindex="-1">网络节流设置 <a class="header-anchor" href="#网络节流设置" aria-label="Permalink to &quot;网络节流设置&quot;">​</a></h3><table tabindex="0"><thead><tr><th>预设</th><th>下载速度</th><th>延迟</th><th>适用场景</th></tr></thead><tbody><tr><td><strong>Online</strong></td><td>无限制</td><td>0ms</td><td>本地测试</td></tr><tr><td><strong>Fast 3G</strong></td><td>1.5Mbps</td><td>40ms</td><td>移动端模拟</td></tr><tr><td><strong>Slow 3G</strong></td><td>400Kbps</td><td>400ms</td><td>弱网测试</td></tr><tr><td><strong>Custom</strong></td><td>可配置</td><td>可配置</td><td>特定场景</td></tr></tbody></table><hr><h2 id="渲染性能优化分析" tabindex="-1">渲染性能优化分析 <a class="header-anchor" href="#渲染性能优化分析" aria-label="Permalink to &quot;渲染性能优化分析&quot;">​</a></h2><h3 id="渲染流水线分析" tabindex="-1">渲染流水线分析 <a class="header-anchor" href="#渲染流水线分析" aria-label="Permalink to &quot;渲染流水线分析&quot;">​</a></h3>`,13)),(a(),t(p,null,{default:i(()=>[e(l,{id:"mermaid-449",class:"mermaid",graph:"graph%20LR%0A%20%20%20%20A%5BJavaScript%5D%20--%3E%20B%5B%E6%A0%B7%E5%BC%8F%E8%AE%A1%E7%AE%97%5D%0A%20%20%20%20B%20--%3E%20C%5B%E5%B8%83%E5%B1%80%5D%0A%20%20%20%20C%20--%3E%20D%5B%E7%BB%98%E5%88%B6%5D%0A%20%20%20%20D%20--%3E%20E%5B%E5%90%88%E6%88%90%5D%0A"})]),fallback:i(()=>s[2]||(s[2]=[h(" Loading... ")])),_:1})),s[9]||(s[9]=n(`<h3 id="常见渲染问题" tabindex="-1">常见渲染问题 <a class="header-anchor" href="#常见渲染问题" aria-label="Permalink to &quot;常见渲染问题&quot;">​</a></h3><ol><li><p><strong>布局抖动</strong>（Layout Thrashing）</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 反模式：强制同步布局</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> resizeAll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    items[i].style.width </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (container.offsetWidth) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;px&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 优化：批量读取和写入</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> resizeAllOptimized</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> width</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> container.offsetWidth; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 先读取</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    items[i].style.width </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> width </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;px&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 后写入</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div></li><li><p><strong>重绘风暴</strong>（Repaint Storm）</p><ul><li>使用CSS will-change属性</li><li>避免频繁修改样式</li></ul></li></ol><h3 id="渲染分析工具" tabindex="-1">渲染分析工具 <a class="header-anchor" href="#渲染分析工具" aria-label="Permalink to &quot;渲染分析工具&quot;">​</a></h3><ol><li><strong>Paint Flashing</strong>：高亮重绘区域</li><li><strong>Layer Borders</strong>：显示合成层</li><li><strong>FPS Meter</strong>：实时帧率监控</li></ol><hr><h2 id="javascript-执行性能分析" tabindex="-1">JavaScript 执行性能分析 <a class="header-anchor" href="#javascript-执行性能分析" aria-label="Permalink to &quot;JavaScript 执行性能分析&quot;">​</a></h2><h3 id="cpu分析技巧" tabindex="-1">CPU分析技巧 <a class="header-anchor" href="#cpu分析技巧" aria-label="Permalink to &quot;CPU分析技巧&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 性能敏感操作优化</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> processData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 使用Web Worker</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (window.Worker) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> worker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Worker</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;data-processor.js&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    worker.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">postMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(largeData);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 主线程分块处理</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    chunkedProcessing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(largeData);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> chunkedProcessing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">chunkSize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> index </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> processChunk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> chunk</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">slice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(index, index </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chunkSize);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 处理数据块...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    index </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chunkSize;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (index </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 使用requestIdleCallback</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      requestIdleCallback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(processChunk);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  processChunk</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h3 id="性能分析api" tabindex="-1">性能分析API <a class="header-anchor" href="#性能分析api" aria-label="Permalink to &quot;性能分析API&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用Performance API</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> start</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> performance.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">now</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 执行待测代码</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">processItems</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> duration</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> performance.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">now</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> start;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`处理耗时: \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">duration</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toFixed</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}ms\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 用户计时标记</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">performance.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mark</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;start-loading&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">performance.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mark</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;end-loading&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">performance.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">measure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;loading&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;start-loading&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;end-loading&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h3 id="v8优化建议" tabindex="-1">V8优化建议 <a class="header-anchor" href="#v8优化建议" aria-label="Permalink to &quot;V8优化建议&quot;">​</a></h3><ol><li><strong>函数优化</strong><ul><li>保持函数精简（&lt;100行）</li><li>避免arguments使用</li></ul></li><li><strong>对象优化</strong><ul><li>保持对象结构稳定</li><li>避免动态属性删除</li></ul></li></ol><hr><h2 id="内存分析技巧" tabindex="-1">内存分析技巧 <a class="header-anchor" href="#内存分析技巧" aria-label="Permalink to &quot;内存分析技巧&quot;">​</a></h2><h3 id="内存泄漏诊断" tabindex="-1">内存泄漏诊断 <a class="header-anchor" href="#内存泄漏诊断" aria-label="Permalink to &quot;内存泄漏诊断&quot;">​</a></h3>`,15)),(a(),t(p,null,{default:i(()=>[e(l,{id:"mermaid-556",class:"mermaid",graph:"graph%20TD%0A%20%20%20%20A%5B%E5%86%85%E5%AD%98%E5%A2%9E%E9%95%BF%5D%20--%3E%20B%5B%E5%88%9B%E5%BB%BA%E5%A0%86%E5%BF%AB%E7%85%A71%5D%0A%20%20%20%20B%20--%3E%20C%5B%E6%89%A7%E8%A1%8C%E6%93%8D%E4%BD%9C%5D%0A%20%20%20%20C%20--%3E%20D%5B%E5%88%9B%E5%BB%BA%E5%A0%86%E5%BF%AB%E7%85%A72%5D%0A%20%20%20%20D%20--%3E%20E%5B%E6%AF%94%E8%BE%83%E5%BF%AB%E7%85%A7%5D%0A%20%20%20%20E%20--%3E%20F%5B%E6%9F%A5%E6%89%BE%E6%9C%AA%E9%87%8A%E6%94%BE%E5%AF%B9%E8%B1%A1%5D%0A"})]),fallback:i(()=>s[3]||(s[3]=[h(" Loading... ")])),_:1})),s[10]||(s[10]=n(`<h3 id="内存分析模式" tabindex="-1">内存分析模式 <a class="header-anchor" href="#内存分析模式" aria-label="Permalink to &quot;内存分析模式&quot;">​</a></h3><ol><li><strong>堆快照比较</strong><ul><li>查找新创建未回收对象</li></ul></li><li><strong>分配时间线</strong><ul><li>实时跟踪内存分配</li></ul></li><li><strong>分配采样</strong><ul><li>低开销内存分析</li></ul></li></ol><h3 id="常见内存问题" tabindex="-1">常见内存问题 <a class="header-anchor" href="#常见内存问题" aria-label="Permalink to &quot;常见内存问题&quot;">​</a></h3><ol><li><strong>分离DOM节点</strong><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建但未插入的DOM节点</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> detachedElement</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;div&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 解决方案：移除引用</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// detachedElement = null;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><strong>未清理的回调</strong><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 未移除的事件监听</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;resize&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, handleResize);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 解决方案：在不需要时移除</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// window.removeEventListener(&#39;resize&#39;, handleResize);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ol><hr><h2 id="性能监控与实时分析" tabindex="-1">性能监控与实时分析 <a class="header-anchor" href="#性能监控与实时分析" aria-label="Permalink to &quot;性能监控与实时分析&quot;">​</a></h2><h3 id="rum-real-user-monitoring" tabindex="-1">RUM（Real User Monitoring） <a class="header-anchor" href="#rum-real-user-monitoring" aria-label="Permalink to &quot;RUM（Real User Monitoring）&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用PerformanceObserver监控CLS</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> observer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PerformanceObserver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> entry</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> of</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEntries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;CLS:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, entry.value);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">observer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">observe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;layout-shift&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, buffered: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 监控FID</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> fidObserver</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PerformanceObserver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> entries</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> list.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getEntries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> firstInput</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> entries[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;FID:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, firstInput.processingStart </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> firstInput.startTime);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fidObserver.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">observe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;first-input&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, buffered: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="性能数据上报" tabindex="-1">性能数据上报 <a class="header-anchor" href="#性能数据上报" aria-label="Permalink to &quot;性能数据上报&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 发送性能指标到服务器</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> reportMetrics</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> metrics</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    lcp: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getLCP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fid: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getFID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    cls: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCLS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    inp: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getINP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    tbt: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTBT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  navigator.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendBeacon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/analytics&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(metrics));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 页面可见性变化时上报</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;visibilitychange&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (document.visibilityState </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;hidden&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    reportMetrics</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="性能监控仪表板" tabindex="-1">性能监控仪表板 <a class="header-anchor" href="#性能监控仪表板" aria-label="Permalink to &quot;性能监控仪表板&quot;">​</a></h3><table tabindex="0"><thead><tr><th>指标</th><th>实时值</th><th>趋势</th><th>报警阈值</th></tr></thead><tbody><tr><td>LCP</td><td>1.2s</td><td>↓</td><td>&gt;2.5s</td></tr><tr><td>CLS</td><td>0.05</td><td>→</td><td>&gt;0.1</td></tr><tr><td>INP</td><td>150ms</td><td>↑</td><td>&gt;200ms</td></tr><tr><td>错误率</td><td>0.2%</td><td>↓</td><td>&gt;1%</td></tr></tbody></table><hr><h2 id="高级性能分析技术" tabindex="-1">高级性能分析技术 <a class="header-anchor" href="#高级性能分析技术" aria-label="Permalink to &quot;高级性能分析技术&quot;">​</a></h2><h3 id="webpagetest-高级用法" tabindex="-1">WebPageTest 高级用法 <a class="header-anchor" href="#webpagetest-高级用法" aria-label="Permalink to &quot;WebPageTest 高级用法&quot;">​</a></h3>`,15)),(a(),t(p,null,{default:i(()=>[e(l,{id:"mermaid-713",class:"mermaid",graph:"graph%20LR%0A%20%20%20%20A%5B%E8%84%9A%E6%9C%AC%E6%8E%A7%E5%88%B6%5D%20--%3E%20B%5B%E8%87%AA%E5%AE%9A%E4%B9%89%E7%94%A8%E6%88%B7%E6%93%8D%E4%BD%9C%5D%0A%20%20%20%20C%5B%E5%A4%9A%E5%9C%B0%E7%82%B9%E6%B5%8B%E8%AF%95%5D%20--%3E%20D%5B%E5%85%A8%E7%90%83%E6%80%A7%E8%83%BD%E5%AF%B9%E6%AF%94%5D%0A%20%20%20%20E%5B%E8%A7%86%E9%A2%91%E6%8D%95%E8%8E%B7%5D%20--%3E%20F%5B%E5%B8%A7%E7%BA%A7%E5%88%86%E6%9E%90%5D%0A"})]),fallback:i(()=>s[4]||(s[4]=[h(" Loading... ")])),_:1})),s[11]||(s[11]=n(`<h3 id="合成监控技术" tabindex="-1">合成监控技术 <a class="header-anchor" href="#合成监控技术" aria-label="Permalink to &quot;合成监控技术&quot;">​</a></h3><ol><li><strong>Lighthouse CI</strong>：集成到CI/CD</li><li><strong>Puppeteer脚本</strong>：自动化性能测试<div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> puppeteer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;puppeteer&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> browser</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> puppeteer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">launch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> page</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> browser.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">newPage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> page.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">goto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 运行Lighthouse</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> report</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> page.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">evaluate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> window.lighthouse.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Performance score:&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, report.categories.performance.score);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> browser.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div></li></ol><h3 id="性能跟踪可视化" tabindex="-1">性能跟踪可视化 <a class="header-anchor" href="#性能跟踪可视化" aria-label="Permalink to &quot;性能跟踪可视化&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用SpeedCurve进行性能跟踪</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 示例：自定义事件标记</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.performance.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mark</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;custom-event-start&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 执行自定义操作</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">performCustomAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.performance.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mark</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;custom-event-end&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">window.performance.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">measure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;custom-event&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;custom-event-start&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;custom-event-end&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><hr><h2 id="性能优化工作流" tabindex="-1">性能优化工作流 <a class="header-anchor" href="#性能优化工作流" aria-label="Permalink to &quot;性能优化工作流&quot;">​</a></h2><h3 id="优化流程框架" tabindex="-1">优化流程框架 <a class="header-anchor" href="#优化流程框架" aria-label="Permalink to &quot;优化流程框架&quot;">​</a></h3>`,7)),(a(),t(p,null,{default:i(()=>[e(l,{id:"mermaid-741",class:"mermaid",graph:"graph%20TD%0A%20%20%20%20A%5B%E5%BB%BA%E7%AB%8B%E5%9F%BA%E7%BA%BF%5D%20--%3E%20B%5B%E5%88%86%E6%9E%90%E7%93%B6%E9%A2%88%5D%0A%20%20%20%20B%20--%3E%20C%5B%E5%AE%9E%E6%96%BD%E4%BC%98%E5%8C%96%5D%0A%20%20%20%20C%20--%3E%20D%5B%E9%AA%8C%E8%AF%81%E6%95%88%E6%9E%9C%5D%0A%20%20%20%20D%20--%3E%20E%5B%E7%9B%91%E6%8E%A7%E5%91%8A%E8%AD%A6%5D%0A%20%20%20%20E%20--%3E%7C%E6%8C%81%E7%BB%AD%7C%20B%0A"})]),fallback:i(()=>s[5]||(s[5]=[h(" Loading... ")])),_:1})),s[12]||(s[12]=n('<h3 id="性能优化检查清单" tabindex="-1">性能优化检查清单 <a class="header-anchor" href="#性能优化检查清单" aria-label="Permalink to &quot;性能优化检查清单&quot;">​</a></h3><ol><li>[ ] 关键资源预加载</li><li>[ ] 图片/视频优化</li><li>[ ] 代码分割与懒加载</li><li>[ ] 缓存策略优化</li><li>[ ] 渲染性能优化</li><li>[ ] JavaScript执行优化</li><li>[ ] 内存泄漏检测</li><li>[ ] 第三方脚本管理</li></ol><h3 id="性能文化建立" tabindex="-1">性能文化建立 <a class="header-anchor" href="#性能文化建立" aria-label="Permalink to &quot;性能文化建立&quot;">​</a></h3><ol><li><strong>性能预算</strong>：设定关键指标阈值</li><li><strong>性能评审</strong>：纳入开发流程</li><li><strong>性能监控</strong>：实时报警机制</li><li><strong>持续优化</strong>：定期回顾改进</li></ol><blockquote><p><strong>性能优化黄金法则</strong>：</p><ol><li><strong>测量先行</strong> - 不测量不优化</li><li><strong>聚焦瓶颈</strong> - 优先解决关键问题</li><li><strong>渐进增强</strong> - 保证基础体验</li><li><strong>持续监控</strong> - 防止性能退化</li></ol></blockquote><p>通过系统化应用这些性能分析技巧和工具，可以显著提升前端应用性能，创造卓越用户体验。</p>',6))])}const A=k(d,[["render",g]]);export{m as __pageData,A as default};
