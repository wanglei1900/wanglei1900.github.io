import{_ as i,c as a,o as n,a7 as l}from"./chunks/framework.Dtft01Yp.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/core/javascript/library/uglify.md","filePath":"frontend/core/javascript/library/uglify.md","lastUpdated":1751966758000}'),p={name:"frontend/core/javascript/library/uglify.md"};function h(k,s,t,e,E,r){return n(),a("div",null,s[0]||(s[0]=[l('<p>uglify-js</p><blockquote><p>UglifyJS是个包含JS解释器、代码最小化、压缩、美化的工具集，是前端开发打包的最常用工具之一。打包后的js,没有注释内容,没有空格且合并到一行,简化了函数参数和变量名</p></blockquote><ul><li>安装node.js</li><li>通过命令 npm install uglify-js -g</li><li>安装成功后，进入到需要压缩的js所在的目录。 然后通过uglifyjs main.js -m -o main.min.js进行压缩，该命令的意思就是把main.js压缩成 main.min.js。</li></ul><p>命令配置项</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">h, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">help                  列出使用指南。</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                              `--help options`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 获取可用选项的详情。</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">V</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">version               打印版本号。</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">parse </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">       指定解析器配置选项</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                              `acorn`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  使用 Acorn 来解析。</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                              `bare_returns`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  允许在函数外return。</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                                              在压缩CommonJS模块或</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`.user.js `</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">引擎调用被同步执行函数包裹的用户脚本 时会用到。</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                              `expression`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  不是解析文件，</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">二是解析一段表达式</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (例如解析JSON).</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                              `spidermonkey`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  输入文件是 SpiderMonkey</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                              AST</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> 格式</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">compress [options]    启用压缩（</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">）</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">指定压缩配置</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                              `pure_funcs`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  传一个函数名的列表，当这些函数返回值没被利用时，该函数会被安全移除。</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">m, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mangle [options]       启用混淆（</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">）</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">指定混淆配置</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                              `reserved`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  不被混淆的名字列表。</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mangle</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">props [options]    混淆属性</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">指定压缩配置</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                              `builtins`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  混淆那些与标准JS全局变量重复的名字。</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                              `debug`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  添加debug前缀和后缀。</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                              `domprops`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  混淆那些鱼DOM属性名重复的名字。</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                              `keep_quoted`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  只混淆没括起来的属性名。</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                              </span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                              `regex`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  只混淆匹配（该正则）的名字。</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                              `reserved`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  不需要混淆的名字的列表（即保留）。</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">beautify [options]    是否美化输出（</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">）</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">指定输出配置：</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                              `beautify`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  默认是启用.</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                              `preamble`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  预设的输出文件头部。你可以插入一段注释，比如版权信息。它不会被解析，但sourcemap会因此调整。</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                              `quote_style`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  括号类型</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                              0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> auto自动</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                              1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> single单引号</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                              2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> double双引号</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                                              3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> original跟随原码</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                              `wrap_iife`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  把立即执行函数括起来。注意：</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">你或许应禁用压缩配置中的</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`negate_iife`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">选项。 </span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">o, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">output </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         输出文件路径</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (默认 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">STDOUT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">). 指定 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`ast`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 或</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                `spidermonkey`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">的话分别是输出UglifyJS或SpiderMonkey </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AST</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">。</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">comments [filter]         保留版权注释。默认像Google Closure那样，保留包含</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@license&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">或</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@preserve&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">这样JSDoc风格的注释。你可以传以下的参数：</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;all&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 保留全部注释</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                                -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 一个合适的正则，如 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`/foo/`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 或 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`/^!/`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">，保留匹配到的注释。 </span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                注意，在启用压缩时，因为死代码被移除或压缩声明为一行，并非</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">所有</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">的注释都会被保留。</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">file </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        从此JSON文件读取 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`minify()`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 配置。</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">define </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">expr</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">value] 定义全局变量。</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ie8                       支持IE8。</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                                等同于在</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`minify()`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">的</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`compress`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">、 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`mangle`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 和 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`output`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">配置设置</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`ie8: true`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">。UglifyJS不会默认兼容IE8。</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">keep</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fnames               不要混淆、干掉的函数的名字。</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">当代码依赖Function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">prototype</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.name时有用。</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cache </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">         用来保存混淆map的文件。</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">self                      把UglifyJS本身也构建成一个依赖包</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">等同于</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`--wrap UglifyJS`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">source</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">map [options]      启用 source map（</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">）</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">指定sourcemap配置</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                `base`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 根路径，用于计算输入文件的相对路径。</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                `content`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  输入sourcemap。假如的你要编译的JS是另外的源码编译出来的。</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                假如该sourcemap包含在js内，请指定</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;inline&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">。 </span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                `filename`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  输出文件的名字或位置。</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                `includeSources`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  如果你要在sourcemap中加上源文件的内容作sourcesContent属性，就传这个参数吧。</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                `root`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  此路径中的源码编译后会产生sourcemap.</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                `url`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   如果指定此值，</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">会添加sourcemap相对路径在</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`//#sourceMappingURL`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">中。</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">timings                   在STDERR显示操作运行时间。</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">toplevel                  压缩</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">混淆在最高作用域中声明的变量名。</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">verbose                   打印诊断信息。</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">warn                      打印警告信息。</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    --</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wrap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">               把所有代码包裹在一个大函数中。让“</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">”和“global”变量有效。</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                你需要传一个参数来指定此模块的名字，以便浏览器引用。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br></div></div>',5)]))}const y=i(p,[["render",h]]);export{g as __pageData,y as default};
