import{_ as e,c as a,o as i,a7 as d}from"./chunks/framework.Dtft01Yp.js";const s=JSON.parse('{"title":"input上传相关 知识点 <input type=\\"file\\">","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/web/upload/input-file.md","filePath":"frontend/web/upload/input-file.md","lastUpdated":1751016452000}'),l={name:"frontend/web/upload/input-file.md"};function o(r,t,p,u,n,c){return i(),a("div",null,t[0]||(t[0]=[d('<h1 id="input上传相关-知识点-input-type-file" tabindex="-1">input上传相关 知识点 <code>&lt;input type=&quot;file&quot;&gt;</code> <a class="header-anchor" href="#input上传相关-知识点-input-type-file" aria-label="Permalink to &quot;input上传相关 知识点 `&lt;input type=&quot;file&quot;&gt;`&quot;">​</a></h1><blockquote><p>带有 type=&quot;file&quot; 的<code> &lt;input&gt;</code> 元素允许用户可以从他们的设备中选择一个或多个文件。选择后，这些文件可以使用提交表单的方式上传到服务器上，或者通过 Javascript 代码和文件 API 对文件进行操作。</p></blockquote><table tabindex="0"><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>值</td><td>value表示已选择文件的路径字符串</td></tr><tr><td>事件</td><td>change 和 input</td></tr><tr><td>支持的公共属性</td><td>required</td></tr><tr><td>附加属性</td><td>accept、capture 和 multiple</td></tr><tr><td>IDL 属性</td><td>files 和 value</td></tr><tr><td>DOM接口</td><td>HTMLInputElement</td></tr><tr><td>方法</td><td>select()</td></tr></tbody></table><h2 id="一、值" tabindex="-1">一、值 <a class="header-anchor" href="#一、值" aria-label="Permalink to &quot;一、值&quot;">​</a></h2><p>value为选择文件的路径，格式为字符串，默认为空串<code>&quot;&quot;</code>,使用<code>.value</code>表示选中文件列表中的第一个。如果是开启multiple属性选择多个文件，可以通过ELEMENT节点<code>.files</code>来访问FileList</p><blockquote><p>为了安全，值的路径显示为<code>C:\\fakepath\\</code>，而非真实路径</p></blockquote><h2 id="二、事件" tabindex="-1">二、事件 <a class="header-anchor" href="#二、事件" aria-label="Permalink to &quot;二、事件&quot;">​</a></h2><p>当值发生改变时，触发这两个事件。input事件：输输入框内容发生改变时就会触发；change事件：输入框内容发生改变，并且输入框失去焦点时触发</p><h2 id="三、附加属性" tabindex="-1">三、附加属性 <a class="header-anchor" href="#三、附加属性" aria-label="Permalink to &quot;三、附加属性&quot;">​</a></h2><p>除了input公共方法，</p><h4 id="_1-accept" tabindex="-1">1.accept <a class="header-anchor" href="#_1-accept" aria-label="Permalink to &quot;1.accept&quot;">​</a></h4><p>属性是一个字符串，它定义了文件 input 应该接受的文件类型。这个字符串是一个以逗号为分隔的唯一文件类型说明符列表（见下面）。</p><pre><code>`&lt;input type=&quot;file&quot; accept=&quot;.doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document&quot; /&gt;`\n</code></pre><h4 id="_2-capture" tabindex="-1">2.capture <a class="header-anchor" href="#_2-capture" aria-label="Permalink to &quot;2.capture&quot;">​</a></h4><p>属性是一个字符串，如果 accept (en-US) 属性指出了 input 是图片或者视频类型，则它指定了使用哪个摄像头去获取这些数据。不作展开</p><p><em>PS:唯一文件类型说明符列表</em></p><p><code>&lt;input type=&quot;file&quot; accept=&quot;image/*,.pdf&quot; /&gt;</code></p><p>accept 属性的值是包含一个或多个（用逗号分隔）唯一文件类型说明符的字符串。例如，一个文件选择器需要能被表示成一张图片的内容，包括标准的图片格式和 PDF 文件，大概是这样的：</p><ul><li>一个以英文句号（“.”）开头的合法的不区分大小写的文件名扩展名。例如：.jpg、.pdf 或 .doc。</li><li>一个不带扩展名的 MIME 类型字符串。</li><li>字符串 audio/*，表示“任何音频文件”。</li><li>字符串 video/*，表示“任何视频文件”。</li><li>字符串 image/*，表示“任何图片文件”。</li></ul><h4 id="_3-multiple" tabindex="-1">3.multiple <a class="header-anchor" href="#_3-multiple" aria-label="Permalink to &quot;3.multiple&quot;">​</a></h4><p>开启后允许用户选择多个文件</p><h2 id="四、idl-属性-files-和-value" tabindex="-1">四、IDL 属性（files 和 value） <a class="header-anchor" href="#四、idl-属性-files-和-value" aria-label="Permalink to &quot;四、IDL 属性（files 和 value）&quot;">​</a></h2><h4 id="_1-files" tabindex="-1">1.files <a class="header-anchor" href="#_1-files" aria-label="Permalink to &quot;1.files&quot;">​</a></h4><p>被选择的文件以 HTMLInputElement.files 属性返回，它是包含一系列 File 对象的 FileList 对象。FileList是一个类数组对象，每个成员都是一个 File 实例。包含</p><blockquote><p>所有现代浏览器中读写 HTMLInputElement.files 的值，不存在兼容性问题。</p></blockquote><table tabindex="0"><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>name</td><td>文件名。</td></tr><tr><td>lastModified</td><td>一个数字，指定文件最后一次修改的日期和时间，以Unix时间戳表示。</td></tr><tr><td>lastModifiedDate 已弃用</td><td>一个 Date 对象，表示文件最后一次修改的日期和时间。这被弃用，并且不应使用。使用 lastModified 作为替代。但是目前仍能访问</td></tr><tr><td>size</td><td>以字节数为单位的文件大小。</td></tr><tr><td>type</td><td>文件的 MIME 类型。</td></tr><tr><td>webkitRelativePath 非标准</td><td>一个字符串，指定了相对于在目录选择器中选择的基本目录的文件路径（即，一个设置了 webkitdirectory 属性的 file 选择器）。这是非标准的，应该谨慎使用。</td></tr></tbody></table><h4 id="_2-value-同上面的-值" tabindex="-1">2.value 同上面的 “值” <a class="header-anchor" href="#_2-value-同上面的-值" aria-label="Permalink to &quot;2.value 同上面的 “值”&quot;">​</a></h4>',27)]))}const f=e(l,[["render",o]]);export{s as __pageData,f as default};
