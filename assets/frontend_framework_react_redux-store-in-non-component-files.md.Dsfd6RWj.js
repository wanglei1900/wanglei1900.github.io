import{_ as i,c as a,o as n,a7 as e}from"./chunks/framework.Dtft01Yp.js";const c=JSON.parse('{"title":"🌅 在非React组件的文件中使用Redux","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/framework/react/redux-store-in-non-component-files.md","filePath":"frontend/framework/react/redux-store-in-non-component-files.md","lastUpdated":1751869578000}'),t={name:"frontend/framework/react/redux-store-in-non-component-files.md"};function p(l,s,r,h,k,d){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="🌅-在非react组件的文件中使用redux" tabindex="-1">🌅 在非React组件的文件中使用Redux <a class="header-anchor" href="#🌅-在非react组件的文件中使用redux" aria-label="Permalink to &quot;🌅 在非React组件的文件中使用Redux&quot;">​</a></h1><h2 id="一、redux的使用场景" tabindex="-1">一、Redux的使用场景 <a class="header-anchor" href="#一、redux的使用场景" aria-label="Permalink to &quot;一、Redux的使用场景&quot;">​</a></h2><ul><li>函数式组件内（hooks调用redux）</li><li>其他文件（无法使用hooks调用redux）</li></ul><h2 id="二、非函数式组件的文件内使用redux" tabindex="-1">二、非函数式组件的文件内使用redux <a class="header-anchor" href="#二、非函数式组件的文件内使用redux" aria-label="Permalink to &quot;二、非函数式组件的文件内使用redux&quot;">​</a></h2><p><code>useDispatch</code> 和 <code>useSelector</code> 这两个hooks只能在函数组件内使用，在非函数组件的文件（以下简称三方文件）就无法使用了。 有些人就会说简单啊，直接把redux 里的store引过来。恭喜你，你很可能造成了一个很大的隐患。</p><p>下面就来详细说说，redux store是单例，是通过注入的方式使得你能在下面所有层级的组件中使用他，<code>&lt;Provider store={store}&gt;&lt;App /&gt;&lt;/Provider&gt;</code>，但是三方文件明显无法直接使用他。 当然直接拿到store示例然后使用上面的方法，肯定是能改变，但是通常会造成一个问题那就是会导致循环依赖。循环依赖可能会直接蹦掉你的程序。</p><p><a href="https://www.cnblogs.com/wanglei1900/p/17732892.html" target="_blank" rel="noreferrer">站内跳转，循环依赖及解决方法</a></p><p>可以看到上面链接中造成循环依赖的根本原因就是在这里 <code>login.ts =&gt; http.ts</code> ， 构成了循环依赖 <code>store.ts =&gt; authSlice.ts =&gt; login.ts =&gt; http.ts =&gt; store.ts</code></p><p>所以直接在http.ts 中引入store实例的方式是错误且不科学的。</p><h2 id="三、解决方案" tabindex="-1">三、解决方案 <a class="header-anchor" href="#三、解决方案" aria-label="Permalink to &quot;三、解决方案&quot;">​</a></h2><p><a href="https://redux.js.org/faq/code-structure#how-can-i-use-the-redux-store-in-non-component-files" target="_blank" rel="noreferrer">📚 官方文档</a></p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* http.ts 文件 */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { Appstore } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@/redux/store&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 读取注入的store（非组件文件）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> store</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Appstore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> injectStore</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">_store</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Appstore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  store </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _store;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.service.interceptors.request.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">use</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">request</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AdaptAxiosRequestConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">token</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> store.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().users;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 入口文件中 main.tsx 文件 */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { store } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@/redux/store.ts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { injectStore } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@/api&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// store注入axios（非react组件文件）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">injectStore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(store);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,13)]))}const E=i(t,[["render",p]]);export{c as __pageData,E as default};
