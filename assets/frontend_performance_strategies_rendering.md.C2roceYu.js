import{_ as r,C as k,c as d,o as a,a7 as n,b as l,w as i,a as e,G as h,a8 as p}from"./chunks/framework.Dtft01Yp.js";const F=JSON.parse('{"title":"前端渲染性能优化指南","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/performance/strategies/rendering.md","filePath":"frontend/performance/strategies/rendering.md","lastUpdated":1752498754000}'),o={name:"frontend/performance/strategies/rendering.md"};function E(g,s,c,u,b,y){const t=k("Mermaid");return a(),d("div",null,[s[2]||(s[2]=n('<h1 id="前端渲染性能优化指南" tabindex="-1">前端渲染性能优化指南 <a class="header-anchor" href="#前端渲染性能优化指南" aria-label="Permalink to &quot;前端渲染性能优化指南&quot;">​</a></h1><h2 id="一、渲染性能核心指标" tabindex="-1">一、渲染性能核心指标 <a class="header-anchor" href="#一、渲染性能核心指标" aria-label="Permalink to &quot;一、渲染性能核心指标&quot;">​</a></h2><ol><li><strong>LCP（Largest Contentful Paint）</strong>：视口中最大内容元素渲染时间，要求≤2.5秒</li><li><strong>INP（Interaction to Next Paint）</strong>：用户交互到页面响应的延迟，要求≤200ms（2024年取代FID）</li><li><strong>CLS（Cumulative Layout Shift）</strong>：累计布局偏移量，要求≤0.1</li><li><strong>FPS（Frames Per Second）</strong>：动画/滚动流畅度阈值≥60fps（帧时间≤16ms）</li></ol><h2 id="二、浏览器渲染原理与瓶颈" tabindex="-1">二、浏览器渲染原理与瓶颈 <a class="header-anchor" href="#二、浏览器渲染原理与瓶颈" aria-label="Permalink to &quot;二、浏览器渲染原理与瓶颈&quot;">​</a></h2>',4)),(a(),l(p,null,{default:i(()=>[h(t,{id:"mermaid-31",class:"mermaid",graph:"graph%20LR%0AA%5BHTML%E8%A7%A3%E6%9E%90%5D%20--%3E%20B%5BDOM%E6%A0%91%E6%9E%84%E5%BB%BA%5D%0AC%5BCSS%E8%A7%A3%E6%9E%90%5D%20--%3E%20D%5BCSSOM%E6%A0%91%E6%9E%84%E5%BB%BA%5D%0AB%20--%3E%20E%5B%E6%B8%B2%E6%9F%93%E6%A0%91%E6%9E%84%E5%BB%BA%5D%0AD%20--%3E%20E%0AE%20--%3E%20F%5B%E5%B8%83%E5%B1%80Layout%5D%0AF%20--%3E%20G%5B%E7%BB%98%E5%88%B6Paint%5D%0AG%20--%3E%20H%5B%E5%90%88%E6%88%90Composite%5D%0A"})]),fallback:i(()=>s[0]||(s[0]=[e(" Loading... ")])),_:1})),s[3]||(s[3]=n(`<p><strong>关键路径阻塞点</strong>：</p><ul><li>脚本加载阻塞解析（默认行为）</li><li>复杂CSS选择器影响CSSOM构建</li><li>频繁重排（Reflow）触发布局计算</li><li>大面积重绘（Repaint）消耗GPU资源</li></ul><h2 id="三、核心优化策略" tabindex="-1">三、核心优化策略 <a class="header-anchor" href="#三、核心优化策略" aria-label="Permalink to &quot;三、核心优化策略&quot;">​</a></h2><h3 id="_1-脚本加载优化" tabindex="-1">1. 脚本加载优化 <a class="header-anchor" href="#_1-脚本加载优化" aria-label="Permalink to &quot;1. 脚本加载优化&quot;">​</a></h3><table tabindex="0"><thead><tr><th>策略</th><th>执行时机</th><th>适用场景</th><th>注意事项</th></tr></thead><tbody><tr><td><strong>async</strong></td><td>下载不阻塞解析，执行阻塞渲染</td><td>独立第三方脚本（统计、广告）</td><td>执行顺序不确定</td></tr><tr><td><strong>defer</strong></td><td>HTML解析后按序执行</td><td>业务主脚本、依赖DOM的操作</td><td>保证执行顺序</td></tr><tr><td><strong>动态加载</strong></td><td>按需创建<code>&lt;script&gt;</code></td><td>非首屏关键功能（如评论区）</td><td>需手动管理依赖</td></tr><tr><td><strong>模块化加载</strong></td><td>动态<code>import()</code>按需加载</td><td>路由级代码分割</td><td>需构建工具支持</td></tr></tbody></table><p><strong>预加载增强</strong>：</p><div class="language-html vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 关键资源提前加载 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;preload&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;main.js&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;script&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">link</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> rel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;prefetch&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;next-page.js&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;script&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_2-dom渲染优化" tabindex="-1">2. DOM渲染优化 <a class="header-anchor" href="#_2-dom渲染优化" aria-label="Permalink to &quot;2. DOM渲染优化&quot;">​</a></h3><p><strong>（1）渲染范围控制</strong></p><ul><li><strong>条件渲染</strong>：使用<code>v-if</code>/<code>wx:if</code>彻底销毁非活跃组件，减少内存占用（适用于低频切换场景）</li><li><strong>显示隐藏</strong>：<code>v-show</code>/<code>hidden</code>仅切换CSS可见性，避免重复创建（适用于高频切换）</li></ul><p><strong>（2）高效更新策略</strong></p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 错误示例：多次触发渲染</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ key1: value1 });</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ key2: value2 });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 正确示例：合并更新</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  key1: value1,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  key2: value2 </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 微信小程序最佳实践</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p><strong>（3）列表渲染优化</strong></p><ul><li><strong>虚拟列表</strong>：仅渲染可视区域元素（视口外元素高度占位）</li></ul><div class="language-jsx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VirtualList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  itemCount</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  itemSize</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  renderItem</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{({</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Item</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{items[index]}/&gt;}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li><strong>Key属性</strong>：使用稳定标识符（如ID）避免节点重建</li><li><strong>分批渲染</strong>：复杂列表分帧加载（每帧10-20项）</li></ul><h3 id="_3-样式与合成优化" tabindex="-1">3. 样式与合成优化 <a class="header-anchor" href="#_3-样式与合成优化" aria-label="Permalink to &quot;3. 样式与合成优化&quot;">​</a></h3><p><strong>（1）减少重排策略</strong></p><ul><li>使用<code>transform/opacity</code>触发GPU加速（跳过布局/绘制阶段）</li><li>避免在循环中读取布局属性（如<code>offsetHeight</code>），会引起强制同步布局</li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 强制同步布局示例（避免！）</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> items.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  items[i].style.width </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> box.offsetWidth </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;px&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><strong>（2）图层管理</strong></p><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.will-change</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  will-change</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: transform; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 提前创建独立图层 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><strong>注意事项</strong>：图层过多增加内存开销，移动端建议≤30个</p><h3 id="_4-资源加载优化" tabindex="-1">4. 资源加载优化 <a class="header-anchor" href="#_4-资源加载优化" aria-label="Permalink to &quot;4. 资源加载优化&quot;">​</a></h3><ul><li><strong>图片优化</strong>： <ul><li>WebP格式替代JPEG/PNG（节省30-50%体积）</li><li>SVG图标代替位图</li><li>懒加载非首屏图片（<code>loading=&quot;lazy&quot;</code>）</li></ul></li><li><strong>字体优化</strong>：</li></ul><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@font-face</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  font-family</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;MyFont&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;myfont.woff2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;woff2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  font-display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">swap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 避免文本渲染阻塞 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="四、框架级优化" tabindex="-1">四、框架级优化 <a class="header-anchor" href="#四、框架级优化" aria-label="Permalink to &quot;四、框架级优化&quot;">​</a></h2><h3 id="_1-vue-ast渲染优化" tabindex="-1">1. Vue AST渲染优化 <a class="header-anchor" href="#_1-vue-ast渲染优化" aria-label="Permalink to &quot;1. Vue AST渲染优化&quot;">​</a></h3>`,28)),(a(),l(p,null,{default:i(()=>[h(t,{id:"mermaid-253",class:"mermaid",graph:"graph%20LR%0AA%5BMarkdown%E6%96%87%E6%9C%AC%5D%20--%3E%20B%5BAST%E8%A7%A3%E6%9E%90%5D%0AB%20--%3E%20C%5BVNode%E7%94%9F%E6%88%90%5D%0AC%20--%3E%20D%5BDiff%20Patch%5D%0A"})]),fallback:i(()=>s[1]||(s[1]=[e(" Loading... ")])),_:1})),s[4]||(s[4]=n(`<p><strong>实施步骤</strong>：</p><ol><li>使用<code>unified+remark-parse</code>解析Markdown为AST</li><li>递归遍历AST生成VNode</li><li>复用Vue Diff算法做最小更新</li></ol><p><strong>优势</strong>：相比<code>v-html</code>全量替换，减少90% DOM操作</p><h3 id="_2-react-渲染控制" tabindex="-1">2. React 渲染控制 <a class="header-anchor" href="#_2-react-渲染控制" aria-label="Permalink to &quot;2. React 渲染控制&quot;">​</a></h3><ul><li><strong>记忆化组件</strong>：<code>React.memo</code>跳过不变子树渲染</li><li><strong>懒加载组件</strong>：</li></ul><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> HeavyComponent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> React.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lazy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./HeavyComponent&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><strong>并发特性</strong>：<code>useTransition</code>保持交互响应性</li></ul><h2 id="五、移动端专项优化" tabindex="-1">五、移动端专项优化 <a class="header-anchor" href="#五、移动端专项优化" aria-label="Permalink to &quot;五、移动端专项优化&quot;">​</a></h2><h3 id="_1-小程序优化技巧" tabindex="-1">1. 小程序优化技巧 <a class="header-anchor" href="#_1-小程序优化技巧" aria-label="Permalink to &quot;1. 小程序优化技巧&quot;">​</a></h3><ul><li><strong>分包加载</strong>：主包≤1.5MB，非核心功能放入分包</li></ul><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;subPackages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;root&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pages/sub&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;pages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;settings/index&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li><strong>骨架屏</strong>：首屏内容加载前展示布局框架</li><li><strong>数据预取</strong>：<code>onLoad</code>阶段预请求下一页数据</li></ul><h3 id="_2-harmonyos渲染控制" tabindex="-1">2. HarmonyOS渲染控制 <a class="header-anchor" href="#_2-harmonyos渲染控制" aria-label="Permalink to &quot;2. HarmonyOS渲染控制&quot;">​</a></h3><table tabindex="0"><thead><tr><th>策略</th><th>实现方式</th><th>适用场景</th></tr></thead><tbody><tr><td><strong>懒加载</strong></td><td><code>LazyForEach+cachedCount</code></td><td>长列表/网格视图</td></tr><tr><td><strong>组件复用</strong></td><td><code>@Reusable</code>装饰器</td><td>结构相同组件（如列表项）</td></tr><tr><td><strong>分帧渲染</strong></td><td>拆分渲染任务到多帧</td><td>超复杂布局（节点&gt;200）</td></tr></tbody></table><h2 id="六、监控与性能工具" tabindex="-1">六、监控与性能工具 <a class="header-anchor" href="#六、监控与性能工具" aria-label="Permalink to &quot;六、监控与性能工具&quot;">​</a></h2><h3 id="_1-核心性能工具" tabindex="-1">1. 核心性能工具 <a class="header-anchor" href="#_1-核心性能工具" aria-label="Permalink to &quot;1. 核心性能工具&quot;">​</a></h3><ul><li><strong>Lighthouse</strong>：实验室性能评分与优化建议</li><li><strong>Chrome Performance</strong>：火焰图分析渲染耗时</li><li><strong>微信开发者工具</strong>：小程序启动/渲染性能分析</li></ul><h3 id="_2-真实用户监控-rum" tabindex="-1">2. 真实用户监控（RUM） <a class="header-anchor" href="#_2-真实用户监控-rum" aria-label="Permalink to &quot;2. 真实用户监控（RUM）&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Web Vitals监控示例</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {getLCP, getINP, getCLS} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;web-vitals&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getLCP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(console.log); </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getINP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(console.log);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCLS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(console.log, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 持续监控CLS</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_3-性能指标看板" tabindex="-1">3. 性能指标看板 <a class="header-anchor" href="#_3-性能指标看板" aria-label="Permalink to &quot;3. 性能指标看板&quot;">​</a></h3><table tabindex="0"><thead><tr><th>指标</th><th>达标阈值</th><th>监控工具</th></tr></thead><tbody><tr><td>LCP</td><td>≤2500ms</td><td>Google Analytics/RUM</td></tr><tr><td>INP</td><td>≤200ms</td><td>Web Vitals库</td></tr><tr><td>CLS</td><td>≤0.1</td><td>Layout Instability API</td></tr><tr><td>FPS</td><td>≥60fps</td><td><code>requestAnimationFrame</code></td></tr></tbody></table><h2 id="七、前沿优化技术" tabindex="-1">七、前沿优化技术 <a class="header-anchor" href="#七、前沿优化技术" aria-label="Permalink to &quot;七、前沿优化技术&quot;">​</a></h2><h3 id="_1-边缘gpu加速" tabindex="-1">1. 边缘GPU加速 <a class="header-anchor" href="#_1-边缘gpu加速" aria-label="Permalink to &quot;1. 边缘GPU加速&quot;">​</a></h3><ul><li><strong>高斯混合单元（GBU）</strong>：边缘GPU插件，提升AR/VR渲染性能</li><li><strong>效果</strong>：静态场景渲染速度提升1.72倍</li></ul><h3 id="_2-webgpu应用" tabindex="-1">2. WebGPU应用 <a class="header-anchor" href="#_2-webgpu应用" aria-label="Permalink to &quot;2. WebGPU应用&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// WebGPU渲染管线示例</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> commandEncoder</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> device.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createCommandEncoder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> passEncoder</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> commandEncoder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">beginRenderPass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(renderPassDescriptor);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">passEncoder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setPipeline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pipeline);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">passEncoder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">draw</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">passEncoder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">device.queue.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">submit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([commandEncoder.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">finish</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()]);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>优势</strong>：比WebGL减少40%绘制调用开销</p><blockquote><p>优化是持续过程，建议每季度进行性能审计。最新趋势包括HTTP/3协议降低网络延迟、INP取代FID成为核心交互指标。</p></blockquote>`,28))])}const C=r(o,[["render",E]]);export{F as __pageData,C as default};
