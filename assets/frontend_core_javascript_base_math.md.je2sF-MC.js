import{_ as a,c as l,o as h,a7 as i}from"./chunks/framework.Dtft01Yp.js";const c=JSON.parse('{"title":"Math","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/core/javascript/base/math.md","filePath":"frontend/core/javascript/base/math.md","lastUpdated":1751966758000}'),e={name:"frontend/core/javascript/base/math.md"};function r(o,t,d,n,x,M){return h(),l("div",null,t[0]||(t[0]=[i('<h1 id="math" tabindex="-1">Math <a class="header-anchor" href="#math" aria-label="Permalink to &quot;Math&quot;">​</a></h1><blockquote><p>Math 是js为我们提供的计算对象（单例内置对象）</p></blockquote><h2 id="_1-math-对象的属性" tabindex="-1">1 Math 对象的属性 <a class="header-anchor" href="#_1-math-对象的属性" aria-label="Permalink to &quot;1 Math 对象的属性&quot;">​</a></h2><table tabindex="0"><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>Math.E</td><td>自然对象e的基数e</td></tr><tr><td>Math.LN10</td><td>10为底的自然对数</td></tr><tr><td>Math.LN2</td><td>2为底的自然对数</td></tr><tr><td>Math.LOG2E</td><td>以2为底e的对数</td></tr><tr><td>Math.LOG10E</td><td>以10为底e的对数</td></tr><tr><td>Math.PI</td><td>圆周率π</td></tr><tr><td>Math.SQRT1_2</td><td>1/2的平方根</td></tr><tr><td>Math.SQRT2</td><td>2的平方根</td></tr></tbody></table><h2 id="_2-math-对象的方法" tabindex="-1">2 Math 对象的方法 <a class="header-anchor" href="#_2-math-对象的方法" aria-label="Permalink to &quot;2 Math 对象的方法&quot;">​</a></h2><h3 id="_2-1-最大最小值" tabindex="-1">2.1 最大最小值 <a class="header-anchor" href="#_2-1-最大最小值" aria-label="Permalink to &quot;2.1 最大最小值&quot;">​</a></h3><ul><li>Math.max() 取最大值</li><li>Math.min() 取最小值</li></ul><p>数组的最大值 Math.max(...arr)</p><h3 id="_2-2-小数值取整舍入方法" tabindex="-1">2.2 小数值取整舍入方法 <a class="header-anchor" href="#_2-2-小数值取整舍入方法" aria-label="Permalink to &quot;2.2 小数值取整舍入方法&quot;">​</a></h3><ul><li>Math.ceil() 向上取整</li><li>Math.floor() 向下取整</li><li>Math.round() 四舍五入</li><li>Math.fround() 返回最接近的单精度（32位）浮点值</li></ul><h3 id="_2-3-随机数" tabindex="-1">2.3 随机数 <a class="header-anchor" href="#_2-3-随机数" aria-label="Permalink to &quot;2.3 随机数&quot;">​</a></h3><ul><li>Math.random() 返回0～1的随机数</li><li>window.crypto.getRandomValues() 如果安全性较高，不允许预测随机数。应该使用这个方法</li></ul><p>1～10随机数 <code>Math.floor(Math.random() * 10 + 1)</code></p><p>2~10s随机数 <code>Math.floor(Math.random() * 9 + 2)</code></p><h3 id="_2-4-其他方法" tabindex="-1">2.4 其他方法 <a class="header-anchor" href="#_2-4-其他方法" aria-label="Permalink to &quot;2.4 其他方法&quot;">​</a></h3><ul><li>Math.abs(x) x的绝对值</li><li>Math.exp(x) Math.E的x次幂</li><li>Math.expm1(x) Math.exp(x)-1</li><li>Math.log(x) x的自然对数</li><li>Math.log1p(x) 1+Math.log(x)</li><li>Math.pow(x, power) x的power次幂</li><li>Math.hypot(...nums) nums中每个数平方和的平方根</li><li>Math.clz32(x) 32位整数的x的前置零的数量</li><li>Math.sign(x) x符号的1、0、-0或-1</li><li>Math.trunx(x) x的整数部分，删除所有小数</li><li>Math.sqrt(x) x的平方根</li><li>Math.cbrt(x) x的立方根</li><li>Math.acos(x) x的反余弦</li><li>Math.acosh(x) x的反双曲余弦</li><li>Math.asin(x) x的反正弦</li><li>Math.asinh(x) x的反双曲正弦</li><li>Math.atan(x) x的反正切</li><li>Math.atanh(x) x的反双曲正切</li><li>Math.atan2(y,x) y/x的反正切</li><li>Math.cos(x) x的余弦</li><li>Math.sin(x) x的正弦</li><li>Math.tan(x) x的正切</li></ul>',16)]))}const m=a(e,[["render",r]]);export{c as __pageData,m as default};
